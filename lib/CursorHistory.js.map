{"version":3,"sources":["../src/CursorHistory.js"],"names":["CursorHistory","isRecording","furthestMatch","pattern","astNode","furthestError","patterns","astNodes","errors","push","endIndex","error","index","matches","length"],"mappings":";;;;;;;;;;;;;IAAqBA,a;;;AACnB,2BAAc;AAAA;;AACZ,SAAKC,WAAL,GAAmB,KAAnB;AAEA,SAAKC,aAAL,GAAqB;AACnBC,MAAAA,OAAO,EAAE,IADU;AAEnBC,MAAAA,OAAO,EAAE;AAFU,KAArB;AAKA,SAAKC,aAAL,GAAqB,IAArB;AAEA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,MAAL,GAAc,EAAd;AACD;;;;6BAEQL,O,EAASC,O,EAAS;AACzB,UAAI,KAAKH,WAAT,EAAsB;AACpB,aAAKK,QAAL,CAAcG,IAAd,CAAmBN,OAAnB;AACA,aAAKI,QAAL,CAAcE,IAAd,CAAmBL,OAAnB;AACD;;AACD,UAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB;AACD;;AACD,UACE,KAAKF,aAAL,CAAmBE,OAAnB,IAA8B,IAA9B,IACAA,OAAO,CAACM,QAAR,IAAoB,KAAKR,aAAL,CAAmBE,OAAnB,CAA2BM,QAFjD,EAGE;AACA,aAAKR,aAAL,CAAmBC,OAAnB,GAA6BA,OAA7B;AACA,aAAKD,aAAL,CAAmBE,OAAnB,GAA6BA,OAA7B;AACD;AACF;;;6BAEQO,K,EAAO;AACd,UAAI,KAAKV,WAAT,EAAsB;AACpB,aAAKO,MAAL,CAAYC,IAAZ,CAAiBE,KAAjB;AACD;;AAED,UAAI,KAAKN,aAAL,IAAsB,IAAtB,IAA8BM,KAAK,CAACC,KAAN,IAAe,KAAKP,aAAL,CAAmBO,KAApE,EAA2E;AACzE,aAAKP,aAAL,GAAqBM,KAArB;AACD;AACF;;;qCAEgB;AACf,WAAKV,WAAL,GAAmB,IAAnB;AACD;;;oCAEe;AACd,WAAKA,WAAL,GAAmB,KAAnB;AACD;;;4BAEO;AACN,WAAKY,OAAL,GAAe,EAAf;AACA,WAAKL,MAAL,GAAc,EAAd;AACD;;;uCAEkB;AACjB,aAAO,KAAKH,aAAZ;AACD;;;uCAEkB;AACjB,aAAO,KAAKH,aAAZ;AACD;;;mCAEc;AACb,aAAO;AACLC,QAAAA,OAAO,EAAE,KAAKG,QAAL,CAAc,KAAKA,QAAL,CAAcQ,MAAd,GAAuB,CAArC,KAA2C,IAD/C;AAELV,QAAAA,OAAO,EAAE,KAAKG,QAAL,CAAc,KAAKA,QAAL,CAAcO,MAAd,GAAuB,CAArC,KAA2C;AAF/C,OAAP;AAID;;;mCAEc;AACb,aAAO,KAAKN,MAAL,CAAY,KAAKA,MAAL,CAAYM,MAAZ,GAAqB,CAAjC,KAAuC,IAA9C;AACD","sourcesContent":["export default class CursorHistory {\n  constructor() {\n    this.isRecording = false;\n\n    this.furthestMatch = {\n      pattern: null,\n      astNode: null\n    };\n\n    this.furthestError = null;\n\n    this.patterns = [];\n    this.astNodes = [];\n    this.errors = [];\n  }\n\n  addMatch(pattern, astNode) {\n    if (this.isRecording) {\n      this.patterns.push(pattern);\n      this.astNodes.push(astNode);\n    }\n    if (astNode == null) {\n      debugger;\n    }\n    if (\n      this.furthestMatch.astNode == null ||\n      astNode.endIndex >= this.furthestMatch.astNode.endIndex\n    ) {\n      this.furthestMatch.pattern = pattern;\n      this.furthestMatch.astNode = astNode;\n    }\n  }\n\n  addError(error) {\n    if (this.isRecording) {\n      this.errors.push(error);\n    }\n\n    if (this.furthestError == null || error.index >= this.furthestError.index) {\n      this.furthestError = error;\n    }\n  }\n\n  startRecording() {\n    this.isRecording = true;\n  }\n\n  stopRecording() {\n    this.isRecording = false;\n  }\n\n  clear() {\n    this.matches = [];\n    this.errors = [];\n  }\n\n  getFurthestError() {\n    return this.furthestError;\n  }\n\n  getFurthestMatch() {\n    return this.furthestMatch;\n  }\n\n  getLastMatch() {\n    return {\n      pattern: this.patterns[this.patterns.length - 1] || null,\n      astNode: this.astNodes[this.astNodes.length - 1] || null\n    };\n  }\n\n  getLastError() {\n    return this.errors[this.errors.length - 1] || null;\n  }\n}\n"],"file":"CursorHistory.js"}