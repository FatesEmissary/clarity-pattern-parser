{"version":3,"sources":["../../src/tests/Cusor.js"],"names":["exports","cursor","Cursor","node","ValueNode","pattern","ValuePattern","setIndex","addMatch","assert","equal","history","furthestMatch","astNode","shorterNode","shorterPattern","didSuccessfullyParse","throwError","Error","getChar","getIndex","hasNext","hasPrevious","tNode","tPattern","eNode","ePattern","xNode","xPattern","startRecording","patterns","length","astNodes","getFurthestMatch","getLastMatch","stopRecording","moveToBeginning","moveToEnd","throws","next","previous","isAtBeginning"],"mappings":"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","sourcesContent":["import assert from \"assert\";\nimport Cursor from \"../Cursor.js\";\nimport ValueNode from \"../ast/ValueNode.js\";\nimport ValuePattern from \"../patterns/value/ValuePattern.js\";\n\nexports[\"Cursor: addMatch.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  const node = new ValueNode(\"text-node\", \"Text\", \"Text\", 0, 3);\n  const pattern = new ValuePattern(\"text\", \"Text\");\n\n  cursor.setIndex(3);\n  cursor.addMatch(pattern, node);\n\n  assert.equal(cursor.history.furthestMatch.astNode, node);\n  assert.equal(cursor.history.furthestMatch.pattern, pattern);\n};\n\nexports[\"Cursor: addMatch that isn't as far.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  const node = new ValueNode(\"text-node\", \"Text\", \"Text\", 0, 3);\n  const pattern = new ValuePattern(\"text\", \"Text Node\");\n\n  const shorterNode = new ValueNode(\"tex-node\", \"Tex\", \"Tex\", 0, 2);\n  const shorterPattern = new ValuePattern(\"tex\", \"Tex\");\n\n  cursor.setIndex(3);\n  cursor.addMatch(pattern, node);\n\n  assert.equal(cursor.history.furthestMatch.astNode, node);\n  assert.equal(cursor.history.furthestMatch.pattern, pattern);\n\n  cursor.setIndex(2);\n  cursor.addMatch(shorterPattern, shorterNode);\n\n  assert.equal(cursor.history.furthestMatch.astNode, node);\n  assert.equal(cursor.history.furthestMatch.pattern, pattern);\n};\n\nexports[\"Cursor: didSuccessfullyParse.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  cursor.setIndex(3);\n  assert.equal(cursor.didSuccessfullyParse(), true);\n\n  cursor.throwError(new Error(\"Failed To Parse.\"));\n\n  assert.equal(cursor.didSuccessfullyParse(), false);\n};\n\nexports[\"Cursor: getChar.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  assert.equal(cursor.getChar(), \"T\");\n  cursor.setIndex(3);\n  assert.equal(cursor.getChar(), \"t\");\n};\n\nexports[\"Cursor: getIndex.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  assert.equal(cursor.getIndex(), 0);\n  cursor.setIndex(3);\n  assert.equal(cursor.getIndex(), 3);\n};\n\nexports[\"Cursor: hasNext.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  assert.equal(cursor.hasNext(), true);\n  cursor.setIndex(3);\n  assert.equal(cursor.hasNext(), false);\n};\n\nexports[\"Cursor: hasPrevious.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  assert.equal(cursor.hasPrevious(), false);\n  cursor.setIndex(3);\n  assert.equal(cursor.hasPrevious(), true);\n};\n\nexports[\"Cursor: recording history.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  const tNode = new ValueNode(\"T\", \"T\", \"T\", 0, 0);\n  const tPattern = new ValuePattern(\"T\", \"T\");\n\n  const eNode = new ValueNode(\"e\", \"e\", \"e\", 1, 1);\n  const ePattern = new ValuePattern(\"e\", \"e\");\n\n  const xNode = new ValueNode(\"x\", \"x\", \"x\", 2, 2);\n  const xPattern = new ValuePattern(\"x\", \"x\");\n\n  cursor.startRecording();\n\n  cursor.addMatch(tPattern, tNode);\n  cursor.addMatch(ePattern, eNode);\n\n  assert.equal(cursor.history.patterns.length, 2);\n  assert.equal(cursor.history.astNodes.length, 2);\n  assert.equal(cursor.history.getFurthestMatch().astNode, eNode);\n  assert.equal(cursor.history.getFurthestMatch().pattern, ePattern);\n  assert.equal(cursor.history.getLastMatch().astNode, eNode);\n  assert.equal(cursor.history.getLastMatch().pattern, ePattern);\n\n  cursor.stopRecording();\n\n  cursor.addMatch(xPattern, xNode);\n\n  assert.equal(cursor.history.patterns.length, 0);\n  assert.equal(cursor.history.astNodes.length, 0);\n  assert.equal(cursor.history.getFurthestMatch().astNode, xNode);\n  assert.equal(cursor.history.getFurthestMatch().pattern, xPattern);\n  assert.equal(cursor.history.getLastMatch().astNode, xNode);\n  assert.equal(cursor.history.getLastMatch().pattern, xPattern);\n};\n\nexports[\"Cursor: moveToBeginning.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  cursor.setIndex(3);\n  cursor.moveToBeginning();\n\n  assert.equal(cursor.getIndex(), 0);\n};\n\nexports[\"Cursor: moveToEnd.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  cursor.moveToEnd();\n\n  assert.equal(cursor.getIndex(), 3);\n};\n\nexports[\"Cursor: setIndex outside of bounds.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  assert.throws(() => {\n    cursor.setIndex(4);\n  });\n};\n\nexports[\"Cursor: empty constructor.\"] = () => {\n  assert.throws(() => {\n    new Cursor();\n  });\n};\n\nexports[\"Cursor: next out of bounds.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  cursor.setIndex(3);\n\n  assert.throws(() => {\n    cursor.next();\n  });\n};\n\nexports[\"Cursor: previous out of bounds.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n\n  assert.throws(() => {\n    cursor.previous();\n  });\n};\n\nexports[\"Cursor: previous.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  cursor.setIndex(1);\n  cursor.previous();\n\n  assert.equal(cursor.getIndex(), 0);\n};\n\nexports[\"Cursor: isAtBeginning.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  cursor.isAtBeginning();\n\n  assert.equal(cursor.getIndex(), 0);\n  assert.equal(cursor.isAtBeginning(), true);\n};\n\nexports[\"Cursor: setIndex.\"] = () => {\n  const cursor = new Cursor(\"Text\");\n  assert.throws(() => {\n    cursor.setIndex(\"\");\n  });\n};\n"],"file":"Cusor.js"}