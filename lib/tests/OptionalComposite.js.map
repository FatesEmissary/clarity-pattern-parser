{"version":3,"sources":["../../src/tests/OptionalComposite.js"],"names":["exports","literal","Literal","pattern","OptionalComposite","possibilities","getPossibilities","assert","equal","length"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,OAAO,CACL,mEADK,CAAP,GAEI,YAAM;AACR,MAAMC,OAAO,GAAG,IAAIC,gBAAJ,CAAY,OAAZ,EAAqB,OAArB,CAAhB;AACA,MAAMC,OAAO,GAAG,IAAIC,0BAAJ,CAAsBH,OAAtB,CAAhB;AAEA,MAAMI,aAAa,GAAGF,OAAO,CAACG,gBAAR,EAAtB;;AAEAC,kBAAOC,KAAP,CAAaH,aAAa,CAACI,MAA3B,EAAmC,CAAnC;;AACAF,kBAAOC,KAAP,CAAaH,aAAa,CAAC,CAAD,CAA1B,EAA+B,OAA/B;AACD,CAVD","sourcesContent":["import OptionalComposite from \"../patterns/composite/OptionalComposite.js\";\nimport Literal from \"../patterns/value/Literal.js\";\nimport assert from \"assert\";\n\nexports[\n  \"OptionalComposite: getPossibilities with no rootPattern supplied.\"\n] = () => {\n  const literal = new Literal(\"Jared\", \"Jared\");\n  const pattern = new OptionalComposite(literal);\n\n  const possibilities = pattern.getPossibilities();\n\n  assert.equal(possibilities.length, 1);\n  assert.equal(possibilities[0], \"Jared\");\n};\n"],"file":"OptionalComposite.js"}