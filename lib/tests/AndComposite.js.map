{"version":3,"sources":["../../src/tests/AndComposite.js"],"names":["exports","john","Literal","doe","cursor","Cursor","name","AndComposite","node","parse","assert","equal","children","value","getIndex","hasUnresolvedError","parseError","message","isMatch","test","throws","first","last","result","OptionalValue","type","middle","clone"],"mappings":"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","sourcesContent":["import AndComposite from \"../patterns/composite/AndComposite.js\";\nimport Literal from \"../patterns/value/Literal.js\";\nimport OptionalValue from \"../patterns/value/OptionalValue.js\";\nimport assert from \"assert\";\nimport { Cursor } from \"../index.js\";\n\nexports[\"AndComposite: Match.\"] = () => {\n  const john = new Literal(\"john\", \"John\");\n  const doe = new Literal(\"doe\", \"Doe\");\n  const cursor = new Cursor(\"JohnDoe\");\n  const name = new AndComposite(\"name\", [john, doe]);\n\n  const node = name.parse(cursor);\n\n  assert.equal(node.name, \"name\");\n  assert.equal(node.children[0].name, \"john\");\n  assert.equal(node.children[1].name, \"doe\");\n  assert.equal(node.children[0].value, \"John\");\n  assert.equal(node.children[1].value, \"Doe\");\n};\n\nexports[\"AndComposite: No Match\"] = () => {\n  const john = new Literal(\"john\", \"John\");\n  const doe = new Literal(\"doe\", \"Doe\");\n  const cursor = new Cursor(\"JohnSmith\");\n  const name = new AndComposite(\"name\", [john, doe]);\n\n  const node = name.parse(cursor);\n\n  assert.equal(node, null);\n  assert.equal(cursor.getIndex(), 0);\n  assert.equal(cursor.hasUnresolvedError(), true);\n  assert.equal(\n    cursor.parseError.message,\n    \"ParseError: Expected 'Doe' but found 'Smi'.\"\n  );\n};\n\nexports[\"AndComposite: test.\"] = () => {\n  const john = new Literal(\"john\", \"John\");\n  const doe = new Literal(\"doe\", \"Doe\");\n  const name = new AndComposite(\"name\", [john, doe]);\n  const isMatch = name.test(\"JohnDoe\");\n\n  assert.equal(isMatch, true);\n};\n\nexports[\"AndComposite: no children.\"] = () => {\n  assert.throws(() => {\n    new AndComposite(\"name\");\n  });\n};\n\nexports[\"AndComposite: string runs out before match is done.\"] = () => {\n  const first = new Literal(\"first\", \"John\");\n  const last = new Literal(\"last\", \"Doe\");\n  const name = new AndComposite(\"name\", [first, last]);\n  const cursor = new Cursor(\"JohnDo\");\n  const result = name.parse(cursor);\n\n};\n\nexports[\"AndComposite: last name is optional.\"] = () => {\n  const first = new Literal(\"first\", \"John\");\n  const last = new OptionalValue(new Literal(\"last\", \"Boe\"));\n  const name = new AndComposite(\"name\", [first, last]);\n  const cursor = new Cursor(\"JohnDo\");\n  const result = name.parse(cursor);\n\n  assert.equal(result.name, \"name\");\n  assert.equal(result.type, \"and-composite\");\n  assert.equal(result.children[0].value, \"John\");\n  assert.equal(result.children[0].name, \"first\");\n  assert.equal(result.children[0].type, \"literal\");\n};\n\nexports[\"AndComposite: three non-optional patterns.\"] = () => {\n  const first = new Literal(\"first\", \"John\");\n  const middle = new Literal(\"middle\", \"Smith\");\n  const last = new Literal(\"last\", \"Doe\");\n  const name = new AndComposite(\"name\", [first, middle, last]);\n  const cursor = new Cursor(\"JohnDoe\");\n  const result = name.parse(cursor);\n};\n\nexports[\n  \"AndComposite: full name, middle optional, and last name isn't.\"\n] = () => {\n  const first = new Literal(\"first\", \"John\");\n  const middle = new OptionalValue(new Literal(\"middle\", \"Smith\"));\n  const last = new Literal(\"last\", \"Doe\");\n  const name = new AndComposite(\"name\", [first, middle, last]);\n  const cursor = new Cursor(\"JohnDoe\");\n  const result = name.parse(cursor);\n};\n\nexports[\"AndComposite: clone.\"] = () => {\n  const john = new Literal(\"john\", \"John\");\n  const doe = new Literal(\"doe\", \"Doe\");\n  const name = new AndComposite(\"name\", [john, doe]);\n  const clone = name.clone(\"name2\");\n\n  assert.equal(clone.name, \"name2\");\n};\n"],"file":"AndComposite.js"}