{"version":3,"sources":["../../src/tests/cssSelector.js"],"names":["exports","cursor","Cursor","result","attribute","parse","assert","equal","name","children","value","didSuccessfullyParse","cssSelector"],"mappings":"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","sourcesContent":["import attribute from \"../queryPatterns/attribute.js\";\nimport cssSelector from \"../queryPatterns/cssSelector.js\";\nimport Cursor from \"../Cursor.js\";\nimport assert from \"assert\";\nimport elementSelector from \"../queryPatterns/elementSelector.js\";\n\nexports[\"attribute: valid\"] = () => {\n    const cursor = new Cursor(\"[name]='value'\");\n    const result = attribute.parse(cursor);\n    \n    assert.equal(result.name, \"attribute\");\n    assert.equal(result.children[0].name, \"name\");\n    assert.equal(result.children[0].children[1].value, \"name\");\n    assert.equal(result.children[1].name, \"equal\");\n    assert.equal(result.children[2].name, \"value\");\n    assert.equal(result.children[2].children[1].value, \"value\");\n    assert.equal(cursor.didSuccessfullyParse(), true);\n\n};\n\nexports[\"attribute: invalid\"] = () => {\n    const cursor = new Cursor(\"[name]='value']\");\n    const result = attribute.parse(cursor);\n    \n    assert.equal(result, null);\n    assert.equal(cursor.didSuccessfullyParse(), false);\n};\n\nexports[\"attribute: escaped single quotes.\"] = () => {\n    const cursor = new Cursor(\"[name='value''s']\");\n    const result = attribute.parse(cursor);\n\n    assert.equal(result.name, \"attribute\");\n    assert.equal(result.children[1].name, \"name\");\n    assert.equal(result.children[1].value, \"name\");\n    assert.equal(result.children[2].name, \"equal\");\n    assert.equal(result.children[3].name, \"value\");\n    assert.equal(result.children[3].children[1].value, \"value''s\");\n    assert.equal(cursor.didSuccessfullyParse(), true);\n};\n\nexports[\"cssSelector: any element type\"] = ()=>{\n    const cursor = new Cursor(\"*\");\n    const result = cssSelector.parse(cursor);\n};\n\nexports[\"cssSelector: element with attribute\"] = ()=>{\n    const cursor = new Cursor(\"*[name='value']\");\n    const result = cssSelector.parse(cursor);\n};\n\nexports[\"cssSelector: element with attribute\"] = ()=>{\n    const cursor = new Cursor(\"element-name > *[name='value']\");\n    const result = cssSelector.parse(cursor);\n};\n\nexports[\"cssSelector: element with attribute\"] = ()=>{\n    const cursor = new Cursor(\"element-name > * > *[name='value']\");\n    const result = cssSelector.parse(cursor);\n};"],"file":"cssSelector.js"}