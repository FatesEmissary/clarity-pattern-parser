{"version":3,"sources":["../../src/tests/Pattern.js"],"names":["exports","valuePattern","Pattern","assert","throws","parse","clone","getPossibilities","undefined","parent","child","equal"],"mappings":";;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,iBAAD,CAAP,GAA6B,YAAM;AACjC,MAAMC,YAAY,GAAG,IAAIC,gBAAJ,CAAY,cAAZ,EAA4B,SAA5B,CAArB;;AACAC,kBAAOC,MAAP,CAAc,YAAM;AAClBH,IAAAA,YAAY,CAACI,KAAb;AACD,GAFD;AAGD,CALD;;AAOAL,OAAO,CAAC,iBAAD,CAAP,GAA6B,YAAM;AACjC,MAAMC,YAAY,GAAG,IAAIC,gBAAJ,CAAY,cAAZ,EAA4B,SAA5B,CAArB;;AACAC,kBAAOC,MAAP,CAAc,YAAM;AAClBH,IAAAA,YAAY,CAACK,KAAb;AACD,GAFD;AAGD,CALD;;AAOAN,OAAO,CAAC,4BAAD,CAAP,GAAwC,YAAM;AAC5C,MAAMC,YAAY,GAAG,IAAIC,gBAAJ,CAAY,cAAZ,EAA4B,SAA5B,CAArB;;AACAC,kBAAOC,MAAP,CAAc,YAAM;AAClBH,IAAAA,YAAY,CAACM,gBAAb;AACD,GAFD;AAGD,CALD;;AAOAP,OAAO,CAAC,6BAAD,CAAP,GAAyC,YAAM;AAC7C,MAAIE,gBAAJ,CAAYM,SAAZ,EAAuB,MAAvB;AACD,CAFD;;AAIAR,OAAO,CAAC,wBAAD,CAAP,GAAoC,YAAM;AACxCG,kBAAOC,MAAP,CAAc,YAAM;AAClB,QAAIF,gBAAJ;AACD,GAFD;AAGD,CAJD;;AAMAF,OAAO,CAAC,sBAAD,CAAP,GAAkC,YAAM;AACtC,MAAMS,MAAM,GAAG,IAAIP,gBAAJ,CAAY,cAAZ,EAA4B,SAA5B,CAAf;AACA,MAAMQ,KAAK,GAAG,IAAIR,gBAAJ,CAAY,cAAZ,EAA4B,SAA5B,CAAd;AAEAQ,EAAAA,KAAK,CAACD,MAAN,GAAeA,MAAf;AACD,CALD;;AAOAT,OAAO,CAAC,8BAAD,CAAP,GAA0C,YAAM;AAC9C,MAAMU,KAAK,GAAG,IAAIR,gBAAJ,CAAY,cAAZ,EAA4B,SAA5B,CAAd;AACAQ,EAAAA,KAAK,CAACD,MAAN,GAAe,EAAf;;AAEAN,kBAAOQ,KAAP,CAAaD,KAAK,CAACD,MAAnB,EAA2B,IAA3B;AACD,CALD","sourcesContent":["import Pattern from \"../patterns/Pattern.js\";\nimport assert from \"assert\";\n\nexports[\"Pattern: parse.\"] = () => {\n  const valuePattern = new Pattern(\"pattern-type\", \"pattern\");\n  assert.throws(() => {\n    valuePattern.parse();\n  });\n};\n\nexports[\"Pattern: clone.\"] = () => {\n  const valuePattern = new Pattern(\"pattern-type\", \"pattern\");\n  assert.throws(() => {\n    valuePattern.clone();\n  });\n};\n\nexports[\"Pattern: getPossibilities.\"] = () => {\n  const valuePattern = new Pattern(\"pattern-type\", \"pattern\");\n  assert.throws(() => {\n    valuePattern.getPossibilities();\n  });\n};\n\nexports[\"Pattern: limited arguments.\"] = () => {\n  new Pattern(undefined, \"name\");\n};\n\nexports[\"Pattern: no arguments.\"] = () => {\n  assert.throws(() => {\n    new Pattern();\n  });\n};\n\nexports[\"Pattern: set parent.\"] = () => {\n  const parent = new Pattern(\"pattern-type\", \"pattern\");\n  const child = new Pattern(\"pattern-type\", \"pattern\");\n\n  child.parent = parent;\n};\n\nexports[\"Pattern: set invalid parent.\"] = () => {\n  const child = new Pattern(\"pattern-type\", \"pattern\");\n  child.parent = \"\";\n\n  assert.equal(child.parent, null);\n};\n"],"file":"Pattern.js"}