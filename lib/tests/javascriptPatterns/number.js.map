{"version":3,"sources":["../../../src/tests/javascriptPatterns/number.js"],"names":["zero","Literal","bigE","littleE","plus","minus","period","digit","AnyOfThese","nonZeroDigit","digitSequence","RepeatValue","validDigitSequence","AndValue","plusOrMinus","OrValue","optionalPlusOrMinus","OptionalValue","e","integer","fraction","float","exponent","number"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,IAAI,GAAG,IAAIC,gBAAJ,CAAY,MAAZ,EAAoB,GAApB,CAAb;AACA,IAAMC,IAAI,GAAG,IAAID,gBAAJ,CAAY,OAAZ,EAAqB,GAArB,CAAb;AACA,IAAME,OAAO,GAAG,IAAIF,gBAAJ,CAAY,UAAZ,EAAwB,GAAxB,CAAhB;AACA,IAAMG,IAAI,GAAG,IAAIH,gBAAJ,CAAY,MAAZ,EAAoB,GAApB,CAAb;AACA,IAAMI,KAAK,GAAG,IAAIJ,gBAAJ,CAAY,OAAZ,EAAqB,GAArB,CAAd;AACA,IAAMK,MAAM,GAAG,IAAIL,gBAAJ,CAAY,QAAZ,EAAsB,GAAtB,CAAf;AACA,IAAMM,KAAK,GAAG,IAAIC,mBAAJ,CAAe,OAAf,EAAwB,YAAxB,CAAd;AACA,IAAMC,YAAY,GAAG,IAAID,mBAAJ,CAAe,gBAAf,EAAiC,WAAjC,CAArB;AACA,IAAME,aAAa,GAAG,IAAIC,oBAAJ,CAAgB,gBAAhB,EAAkCJ,KAAlC,CAAtB;AAEA,IAAMK,kBAAkB,GAAG,IAAIC,iBAAJ,CAAa,gBAAb,EAA+B,CACxDJ,YADwD,EAExDC,aAFwD,CAA/B,CAA3B;AAKA,IAAMI,WAAW,GAAG,IAAIC,gBAAJ,CAAY,eAAZ,EAA6B,CAACX,IAAD,EAAOC,KAAP,CAA7B,CAApB;AAEA,IAAMW,mBAAmB,GAAG,IAAIC,sBAAJ,CAAkBH,WAAlB,CAA5B;AAEA,IAAMI,CAAC,GAAG,IAAIH,gBAAJ,CAAY,GAAZ,EAAiB,CAACb,IAAD,EAAOC,OAAP,CAAjB,CAAV;AAEA,IAAMgB,OAAO,GAAG,IAAIJ,gBAAJ,CAAY,SAAZ,EAAuB,CAACf,IAAD,EAAOY,kBAAP,CAAvB,CAAhB;AAEA,IAAMQ,QAAQ,GAAG,IAAIP,iBAAJ,CAAa,UAAb,EAAyB,CACxCH,aADwC,EAExCJ,MAFwC,EAGxCI,aAHwC,CAAzB,CAAjB;AAMA,IAAMW,KAAK,GAAG,IAAIN,gBAAJ,CAAY,OAAZ,EAAqB,CAC/BK,QAD+B,EAE/BD,OAF+B,CAArB,CAAd;AAKA,IAAMG,QAAQ,GAAG,IAAIT,iBAAJ,CAAa,UAAb,EAAyB,CACxCQ,KADwC,EAExCH,CAFwC,EAGxCF,mBAHwC,EAIxCN,aAJwC,CAAzB,CAAjB;AAOA,IAAMa,MAAM,GAAG,IAAIR,gBAAJ,CAAY,QAAZ,EAAsB,CAACO,QAAD,EAAWF,QAAX,EAAqBD,OAArB,CAAtB,CAAf;eAEeI,M","sourcesContent":["import Literal from \"../../patterns/value/Literal.js\";\nimport OrValue from \"../../patterns/value/OrValue.js\";\nimport RepeatValue from \"../../patterns/value/RepeatValue.js\";\nimport AndValue from \"../../patterns/value/AndValue.js\";\nimport AnyOfThese from \"../../patterns/value/AnyofThese.js\";\nimport OptionalValue from \"../../patterns/value/OptionalValue.js\";\n\nconst zero = new Literal(\"zero\", \"0\");\nconst bigE = new Literal(\"big-e\", \"E\");\nconst littleE = new Literal(\"little-e\", \"e\");\nconst plus = new Literal(\"plus\", \"+\");\nconst minus = new Literal(\"minus\", \"-\");\nconst period = new Literal(\"period\", \".\");\nconst digit = new AnyOfThese(\"digit\", \"0987654321\");\nconst nonZeroDigit = new AnyOfThese(\"non-zero-digit\", \"987654321\");\nconst digitSequence = new RepeatValue(\"digit-sequence\", digit);\n\nconst validDigitSequence = new AndValue(\"non-zero-start\", [\n  nonZeroDigit,\n  digitSequence\n]);\n\nconst plusOrMinus = new OrValue(\"plus-or-minus\", [plus, minus]);\n\nconst optionalPlusOrMinus = new OptionalValue(plusOrMinus);\n\nconst e = new OrValue(\"e\", [bigE, littleE]);\n\nconst integer = new OrValue(\"integer\", [zero, validDigitSequence]);\n\nconst fraction = new AndValue(\"fraction\", [\n  digitSequence,\n  period,\n  digitSequence\n]);\n\nconst float = new OrValue(\"float\", [\n    fraction,\n    integer\n]);\n\nconst exponent = new AndValue(\"exponent\", [\n  float,\n  e,\n  optionalPlusOrMinus,\n  digitSequence\n]);\n\nconst number = new OrValue(\"number\", [exponent, fraction, integer]);\n\nexport default number;\n"],"file":"number.js"}