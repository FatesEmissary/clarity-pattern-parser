{"version":3,"sources":["../../../src/tests/javascriptPatterns/string.js"],"names":["singleQuote","Literal","doubleQuote","backslash","singleQuoteOrBackslash","OrValue","doubleQuoteOrBackslash","unescapedSingleCharacter","NotValue","unescapedDoubleCharacter","escapedSingleQuote","escapedDoubleQuote","escapedBackslash","escapedSlash","escapedBackspace","escapedformFeed","escapedNewLine","escapedCarriageReturn","escapedTab","singleQuoteCharacter","doubleQuoteCharacter","singleCharacterSequence","RepeatValue","doubleCharacterSequence","singleQuoteString","AndValue","doubleQuoteString","string"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,WAAW,GAAG,IAAIC,gBAAJ,CAAY,cAAZ,EAA4B,GAA5B,CAApB;AACA,IAAMC,WAAW,GAAG,IAAID,gBAAJ,CAAY,cAAZ,EAA4B,GAA5B,CAApB;AACA,IAAME,SAAS,GAAG,IAAIF,gBAAJ,CAAY,cAAZ,EAA4B,IAA5B,CAAlB;AAEA,IAAMG,sBAAsB,GAAG,IAAIC,gBAAJ,CAAY,2BAAZ,EAAyC,CACtEL,WADsE,EAEtEG,SAFsE,CAAzC,CAA/B;AAKA,IAAMG,sBAAsB,GAAG,IAAID,gBAAJ,CAAY,2BAAZ,EAAyC,CACtEH,WADsE,EAEtEC,SAFsE,CAAzC,CAA/B;AAKA,IAAMI,wBAAwB,GAAG,IAAIC,iBAAJ,CAC/B,4BAD+B,EAE/BJ,sBAF+B,CAAjC;AAIA,IAAMK,wBAAwB,GAAG,IAAID,iBAAJ,CAC/B,4BAD+B,EAE/BF,sBAF+B,CAAjC;AAIA,IAAMI,kBAAkB,GAAG,IAAIT,gBAAJ,CAAY,sBAAZ,EAAoC,KAApC,CAA3B;AACA,IAAMU,kBAAkB,GAAG,IAAIV,gBAAJ,CAAY,sBAAZ,EAAoC,KAApC,CAA3B;AACA,IAAMW,gBAAgB,GAAG,IAAIX,gBAAJ,CAAY,mBAAZ,EAAiC,KAAjC,CAAzB;AACA,IAAMY,YAAY,GAAG,IAAIZ,gBAAJ,CAAY,eAAZ,EAA6B,KAA7B,CAArB;AACA,IAAMa,gBAAgB,GAAG,IAAIb,gBAAJ,CAAY,mBAAZ,EAAiC,KAAjC,CAAzB;AACA,IAAMc,eAAe,GAAG,IAAId,gBAAJ,CAAY,mBAAZ,EAAiC,KAAjC,CAAxB;AACA,IAAMe,cAAc,GAAG,IAAIf,gBAAJ,CAAY,kBAAZ,EAAgC,KAAhC,CAAvB;AACA,IAAMgB,qBAAqB,GAAG,IAAIhB,gBAAJ,CAAY,yBAAZ,EAAuC,KAAvC,CAA9B;AACA,IAAMiB,UAAU,GAAG,IAAIjB,gBAAJ,CAAY,aAAZ,EAA2B,KAA3B,CAAnB;AAEA,IAAMkB,oBAAoB,GAAG,IAAId,gBAAJ,CAAY,WAAZ,EAAyB,CACpDK,kBADoD,EAEpDC,kBAFoD,EAGpDC,gBAHoD,EAIpDC,YAJoD,EAKpDC,gBALoD,EAMpDC,eANoD,EAOpDC,cAPoD,EAQpDC,qBARoD,EASpDC,UAToD,EAUpDX,wBAVoD,CAAzB,CAA7B;AAaA,IAAMa,oBAAoB,GAAG,IAAIf,gBAAJ,CAAY,WAAZ,EAAyB,CACpDK,kBADoD,EAEpDC,kBAFoD,EAGpDC,gBAHoD,EAIpDC,YAJoD,EAKpDC,gBALoD,EAMpDC,eANoD,EAOpDC,cAPoD,EAQpDC,qBARoD,EASpDC,UAToD,EAUpDT,wBAVoD,CAAzB,CAA7B;AAaA,IAAMY,uBAAuB,GAAG,IAAIC,oBAAJ,CAAgB,gBAAhB,EAAkCH,oBAAlC,CAAhC;AACA,IAAMI,uBAAuB,GAAG,IAAID,oBAAJ,CAAgB,gBAAhB,EAAkCF,oBAAlC,CAAhC;AAEA,IAAMI,iBAAiB,GAAG,IAAIC,iBAAJ,CAAa,qBAAb,EAAoC,CAC5DzB,WAD4D,EAE5DqB,uBAF4D,EAG5DrB,WAH4D,CAApC,CAA1B;AAMA,IAAM0B,iBAAiB,GAAG,IAAID,iBAAJ,CAAa,qBAAb,EAAoC,CAC5DvB,WAD4D,EAE5DqB,uBAF4D,EAG5DrB,WAH4D,CAApC,CAA1B;AAMA,IAAMyB,MAAM,GAAG,IAAItB,gBAAJ,CAAY,QAAZ,EAAsB,CAACmB,iBAAD,EAAoBE,iBAApB,CAAtB,CAAf;eAEeC,M","sourcesContent":["import Literal from \"../../patterns/value/Literal.js\";\nimport NotValue from \"../../patterns/value/NotValue.js\";\nimport OrValue from \"../../patterns/value/OrValue.js\";\nimport RepeatValue from \"../../patterns/value/RepeatValue.js\";\nimport AndValue from \"../../patterns/value/AndValue.js\";\n\nconst singleQuote = new Literal(\"single-quote\", \"'\");\nconst doubleQuote = new Literal(\"double-quote\", '\"');\nconst backslash = new Literal(\"double-quote\", \"\\\\\");\n\nconst singleQuoteOrBackslash = new OrValue(\"single-quote-or-backslash\", [\n  singleQuote,\n  backslash\n]);\n\nconst doubleQuoteOrBackslash = new OrValue(\"single-quote-or-backslash\", [\n  doubleQuote,\n  backslash\n]);\n\nconst unescapedSingleCharacter = new NotValue(\n  \"unescaped-single-character\",\n  singleQuoteOrBackslash\n);\nconst unescapedDoubleCharacter = new NotValue(\n  \"unescaped-double-character\",\n  doubleQuoteOrBackslash\n);\nconst escapedSingleQuote = new Literal(\"escaped-single-quote\", \"\\\\'\");\nconst escapedDoubleQuote = new Literal(\"escaped-double-quote\", '\\\\\"');\nconst escapedBackslash = new Literal(\"escaped-backslash\", \"\\\\/\");\nconst escapedSlash = new Literal(\"escaped-slash\", \"\\\\/\");\nconst escapedBackspace = new Literal(\"escaped-backspace\", \"\\\\b\");\nconst escapedformFeed = new Literal(\"escaped-form-feed\", \"\\\\f\");\nconst escapedNewLine = new Literal(\"escaped-new-line\", \"\\\\n\");\nconst escapedCarriageReturn = new Literal(\"escaped-carriage-return\", \"\\\\r\");\nconst escapedTab = new Literal(\"escaped-tab\", \"\\\\t\");\n\nconst singleQuoteCharacter = new OrValue(\"character\", [\n  escapedSingleQuote,\n  escapedDoubleQuote,\n  escapedBackslash,\n  escapedSlash,\n  escapedBackspace,\n  escapedformFeed,\n  escapedNewLine,\n  escapedCarriageReturn,\n  escapedTab,\n  unescapedSingleCharacter\n]);\n\nconst doubleQuoteCharacter = new OrValue(\"character\", [\n  escapedSingleQuote,\n  escapedDoubleQuote,\n  escapedBackslash,\n  escapedSlash,\n  escapedBackspace,\n  escapedformFeed,\n  escapedNewLine,\n  escapedCarriageReturn,\n  escapedTab,\n  unescapedDoubleCharacter\n]);\n\nconst singleCharacterSequence = new RepeatValue(\"string-content\", singleQuoteCharacter);\nconst doubleCharacterSequence = new RepeatValue(\"string-content\", doubleQuoteCharacter);\n\nconst singleQuoteString = new AndValue(\"single-quote-string\", [\n  singleQuote,\n  singleCharacterSequence,\n  singleQuote\n]);\n\nconst doubleQuoteString = new AndValue(\"double-quote-string\", [\n  doubleQuote,\n  doubleCharacterSequence,\n  doubleQuote\n]);\n\nconst string = new OrValue(\"string\", [singleQuoteString, doubleQuoteString]);\n\nexport default string;\n"],"file":"string.js"}