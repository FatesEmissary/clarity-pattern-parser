{"version":3,"sources":["../../../src/tests/javascriptPatterns/objectLiteral.js"],"names":["expression","RecursivePattern","optionalWhitespace","OptionalValue","whitespace","comma","Literal","colon","separator","AndValue","property","OrValue","name","string","keyValue","AndComposite","keyValues","RepeatComposite","optionalKeyValues","OptionalComposite","openBracket","closeBracket","objectLiteral"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,IAAIC,kCAAJ,CAAqB,YAArB,CAAnB;AACA,IAAMC,kBAAkB,GAAG,IAAIC,sBAAJ,CAAkBC,mBAAlB,CAA3B;AACA,IAAMC,KAAK,GAAG,IAAIC,gBAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAd;AACA,IAAMC,KAAK,GAAG,IAAID,gBAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAd;AAEA,IAAME,SAAS,GAAG,IAAIC,QAAJ,CAAa,WAAb,EAA0B,CAC1CP,kBAD0C,EAE1CG,KAF0C,EAG1CH,kBAH0C,CAA1B,CAAlB;AAMA,IAAMQ,QAAQ,GAAG,IAAIC,gBAAJ,CAAY,UAAZ,EAAwB,CAACC,aAAD,EAAOC,eAAP,CAAxB,CAAjB;AAEA,IAAMC,QAAQ,GAAG,IAAIC,qBAAJ,CAAiB,WAAjB,EAA8B,CAC7CL,QAD6C,EAE7CR,kBAF6C,EAG7CK,KAH6C,EAI7CL,kBAJ6C,EAK7CF,UAL6C,CAA9B,CAAjB;AAQA,IAAMgB,SAAS,GAAG,IAAIC,wBAAJ,CAAoB,YAApB,EAAkCH,QAAlC,EAA4CN,SAA5C,CAAlB;AACA,IAAMU,iBAAiB,GAAG,IAAIC,0BAAJ,CAAsBH,SAAtB,CAA1B;AACA,IAAMI,WAAW,GAAG,IAAId,gBAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAApB;AACA,IAAMe,YAAY,GAAG,IAAIf,gBAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAArB;AAEA,IAAMgB,aAAa,GAAG,IAAIP,qBAAJ,CAAiB,gBAAjB,EAAmC,CACvDK,WADuD,EAEvDlB,kBAFuD,EAGvDgB,iBAHuD,EAIvDhB,kBAJuD,EAKvDmB,YALuD,CAAnC,CAAtB;eAQeC,a","sourcesContent":["import { Literal } from \"../../patterns/value/Literal.js\";\nimport AndComposite from \"../../patterns/composite/AndComposite.js\";\nimport RepeatComposite from \"../../patterns/composite/RepeatComposite.js\";\nimport OptionalComposite from \"../../patterns/composite/OptionalComposite.js\";\nimport OrValue from \"../../patterns/value/OrValue.js\";\nimport OptionalValue from \"../../patterns/value/OptionalValue.js\";\nimport { RecursivePattern } from \"../../patterns/RecursivePattern.js\";\nimport name from \"./name.js\";\nimport string from \"./string.js\";\nimport whitespace from \"./whitespace.js\";\n\nconst expression = new RecursivePattern(\"expression\");\nconst optionalWhitespace = new OptionalValue(whitespace);\nconst comma = new Literal(\",\", \",\");\nconst colon = new Literal(\":\", \":\");\n\nconst separator = new AndValue(\"separator\", [\n  optionalWhitespace,\n  comma,\n  optionalWhitespace\n]);\n\nconst property = new OrValue(\"property\", [name, string]);\n\nconst keyValue = new AndComposite(\"key-value\", [\n  property,\n  optionalWhitespace,\n  colon,\n  optionalWhitespace,\n  expression\n]);\n\nconst keyValues = new RepeatComposite(\"key-values\", keyValue, separator);\nconst optionalKeyValues = new OptionalComposite(keyValues);\nconst openBracket = new Literal(\"{\", \"}\");\nconst closeBracket = new Literal(\"}\", \"}\");\n\nconst objectLiteral = new AndComposite(\"object-literal\", [\n  openBracket,\n  optionalWhitespace,\n  optionalKeyValues,\n  optionalWhitespace,\n  closeBracket\n]);\n\nexport default objectLiteral;\n"],"file":"objectLiteral.js"}