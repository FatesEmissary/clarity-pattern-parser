{"version":3,"sources":["../../src/tests/Node.js"],"names":["exports","assert","throws","Node","clone","filter","toString","undefined"],"mappings":";;AAAA;;AACA;;;;AAEAA,OAAO,CAAC,cAAD,CAAP,GAA0B,YAAM;AAC9BC,kBAAOC,MAAP,CAAc,YAAM;AAClB,QAAIC,aAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BC,KAA/B;AACD,GAFD;AAGD,CAJD;;AAMAJ,OAAO,CAAC,eAAD,CAAP,GAA2B,YAAM;AAC/BC,kBAAOC,MAAP,CAAc,YAAM;AAClB,QAAIC,aAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BE,MAA/B;AACD,GAFD;AAGD,CAJD;;AAMAL,OAAO,CAAC,iBAAD,CAAP,GAA6B,YAAM;AACjCC,kBAAOC,MAAP,CAAc,YAAM;AAClB,QAAIC,aAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BG,QAA/B;AACD,GAFD;AAGD,CAJD;;AAMAN,OAAO,CAAC,2BAAD,CAAP,GAAuC,YAAM;AAC3CC,kBAAOC,MAAP,CAAc,YAAM;AAClB,QAAIC,aAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyBI,SAAzB,EAAoC,CAApC;AACD,GAFD;AAGD,CAJD;;AAMAP,OAAO,CAAC,yBAAD,CAAP,GAAqC,YAAM;AACzCC,kBAAOC,MAAP,CAAc,YAAM;AAClB,QAAIC,aAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyB,CAAzB;AACD,GAFD;AAGD,CAJD;;AAMAH,OAAO,CAAC,2BAAD,CAAP,GAAuC,YAAM;AAC3C,MAAIG,aAAJ,CAAS,MAAT,EAAiB,MAAjB,EAAyB,CAAzB,EAA4B,CAA5B;AACD,CAFD","sourcesContent":["import Node from \"../ast/Node.js\";\nimport assert from \"assert\";\n\nexports[\"Node: clone.\"] = () => {\n  assert.throws(() => {\n    new Node(\"type\", \"name\", 0, 1).clone();\n  });\n};\n\nexports[\"Node: fitler.\"] = () => {\n  assert.throws(() => {\n    new Node(\"type\", \"name\", 0, 1).filter();\n  });\n};\n\nexports[\"Node: toString.\"] = () => {\n  assert.throws(() => {\n    new Node(\"type\", \"name\", 0, 1).toString();\n  });\n};\n\nexports[\"Node: With no startIndex.\"] = () => {\n  assert.throws(() => {\n    new Node(\"type\", \"name\", undefined, 1);\n  });\n};\n\nexports[\"Node: With no endIndex.\"] = () => {\n  assert.throws(() => {\n    new Node(\"type\", \"name\", 0);\n  });\n};\n\nexports[\"Node: With all arguments.\"] = () => {\n  new Node(\"type\", \"name\", 0, 0);\n};\n"],"file":"Node.js"}