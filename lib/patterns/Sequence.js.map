{"version":3,"sources":["../../src/patterns/Sequence.js"],"names":["CompositeNode","Sequence","constructor","name","parsers","assertParsers","forEach","parser","parse","Error","length","cursor","nodes","x","push","node","children"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,yBAA1B;;AAEA,eAAe,MAAMC,QAAN,CAAe;AAC5BC,cAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AACzB,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;;AAEA,SAAKC,aAAL;AACD;;AAEDA,kBAAgB;AACd,SAAKD,OAAL,CAAaE,OAAb,CAAqBC,UAAU;AAC7B,UAAI,OAAOA,OAAOC,KAAd,KAAwB,UAA5B,EAAwC;AACtC,cAAM,IAAIC,KAAJ,CACJ,uDADI,CAAN;AAGD;AACF,KAND;;AAQA,QAAI,KAAKL,OAAL,CAAaM,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,YAAM,IAAID,KAAJ,CACJ,2DADI,CAAN;AAGD;AACF;;AAEDD,QAAMG,MAAN,EAAc;AACZ,UAAMC,QAAQ,EAAd;;AAEA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKT,OAAL,CAAaM,MAAjC,EAAyCG,GAAzC,EAA8C;AAC5CD,YAAME,IAAN,CAAW,KAAKV,OAAL,CAAaS,CAAb,EAAgBL,KAAhB,CAAsBG,MAAtB,CAAX;AACD;;AAED,UAAMI,OAAO,IAAIf,aAAJ,CAAkB,KAAKG,IAAvB,CAAb;AACAY,SAAKC,QAAL,GAAgBJ,KAAhB;AACA,WAAOG,IAAP;AACD;AAlC2B","file":"Sequence.js","sourcesContent":["import CompositeNode from \"../ast/CompositeNode.js\";\n\nexport default class Sequence {\n  constructor(name, parsers) {\n    this.name = name;\n    this.parsers = parsers;\n\n    this.assertParsers();\n  }\n\n  assertParsers() {\n    this.parsers.forEach(parser => {\n      if (typeof parser.parse !== \"function\") {\n        throw new Error(\n          \"Invalid Argument: A Sequence can only accept parsers.\"\n        );\n      }\n    });\n\n    if (this.parsers.length < 2) {\n      throw new Error(\n        \"Invalid Arguments: A Sequence needs at least two options.\"\n      );\n    }\n  }\n\n  parse(cursor) {\n    const nodes = [];\n\n    for (let x = 0; x < this.parsers.length; x++) {\n      nodes.push(this.parsers[x].parse(cursor));\n    }\n\n    const node = new CompositeNode(this.name);\n    node.children = nodes;\n    return node;\n  }\n}\n"]}