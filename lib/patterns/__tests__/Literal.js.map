{"version":3,"sources":["../../../src/patterns/__tests__/Literal.js"],"names":["describe","test","expect","cursor","Cursor","toThrow","literal","Literal","node","parse","value","toBe","type","getIndex","getChar"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,SAAD,EAAY,MAAM;AACxBC,EAAAA,IAAI,CAAC,gCAAD,EAAmC,MAAM;AAC3CC,IAAAA,MAAM,CAAC,MAAM;AACX,YAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAW,EAAX,CAAf;AACD,KAFK,CAAN,CAEGC,OAFH;AAGD,GAJG,CAAJ;AAMAJ,EAAAA,IAAI,CAAC,uBAAD,EAA0B,MAAM;AAClC,UAAME,MAAM,GAAG,IAAIC,eAAJ,CAAW,GAAX,CAAf;AACA,UAAME,OAAO,GAAG,IAAIC,gBAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAAhB;AACA,UAAMC,IAAI,GAAGF,OAAO,CAACG,KAAR,CAAcN,MAAd,CAAb;AAEAD,IAAAA,MAAM,CAACM,IAAI,CAACE,KAAN,CAAN,CAAmBC,IAAnB,CAAwB,GAAxB;AACAT,IAAAA,MAAM,CAACM,IAAI,CAACI,IAAN,CAAN,CAAkBD,IAAlB,CAAuB,KAAvB;AACD,GAPG,CAAJ;AASAV,EAAAA,IAAI,CAAC,wBAAD,EAA2B,MAAM;AACnC,UAAME,MAAM,GAAG,IAAIC,eAAJ,CAAW,IAAX,CAAf;AACA,UAAME,OAAO,GAAG,IAAIC,gBAAJ,CAAY,QAAZ,EAAsB,IAAtB,CAAhB;AACA,UAAMC,IAAI,GAAGF,OAAO,CAACG,KAAR,CAAcN,MAAd,CAAb;AAEAD,IAAAA,MAAM,CAACM,IAAI,CAACE,KAAN,CAAN,CAAmBC,IAAnB,CAAwB,IAAxB;AACAT,IAAAA,MAAM,CAACM,IAAI,CAACI,IAAN,CAAN,CAAkBD,IAAlB,CAAuB,QAAvB;AACD,GAPG,CAAJ;AASAV,EAAAA,IAAI,CAAC,wBAAD,EAA2B,MAAM;AACnC,UAAME,MAAM,GAAG,IAAIC,eAAJ,CAAW,KAAX,CAAf;AACA,UAAME,OAAO,GAAG,IAAIC,gBAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAAhB;AACA,UAAMC,IAAI,GAAGF,OAAO,CAACG,KAAR,CAAcN,MAAd,CAAb;AAEAD,IAAAA,MAAM,CAACM,IAAI,CAACE,KAAN,CAAN,CAAmBC,IAAnB,CAAwB,GAAxB;AACAT,IAAAA,MAAM,CAACM,IAAI,CAACI,IAAN,CAAN,CAAkBD,IAAlB,CAAuB,KAAvB;AACAT,IAAAA,MAAM,CAACC,MAAM,CAACU,QAAP,EAAD,CAAN,CAA0BF,IAA1B,CAA+B,CAA/B;AACAT,IAAAA,MAAM,CAACC,MAAM,CAACW,OAAP,EAAD,CAAN,CAAyBH,IAAzB,CAA8B,GAA9B;AAED,GAVG,CAAJ;AAYAV,EAAAA,IAAI,CAAC,yBAAD,EAA4B,MAAM;AACpC,UAAME,MAAM,GAAG,IAAIC,eAAJ,CAAW,KAAX,CAAf;AACA,UAAME,OAAO,GAAG,IAAIC,gBAAJ,CAAY,QAAZ,EAAsB,IAAtB,CAAhB;AACA,UAAMC,IAAI,GAAGF,OAAO,CAACG,KAAR,CAAcN,MAAd,CAAb;AAEAD,IAAAA,MAAM,CAACM,IAAI,CAACE,KAAN,CAAN,CAAmBC,IAAnB,CAAwB,IAAxB;AACAT,IAAAA,MAAM,CAACM,IAAI,CAACI,IAAN,CAAN,CAAkBD,IAAlB,CAAuB,QAAvB;AACAT,IAAAA,MAAM,CAACC,MAAM,CAACU,QAAP,EAAD,CAAN,CAA0BF,IAA1B,CAA+B,CAA/B;AACAT,IAAAA,MAAM,CAACC,MAAM,CAACW,OAAP,EAAD,CAAN,CAAyBH,IAAzB,CAA8B,GAA9B;AAED,GAVG,CAAJ;AAWD,CAhDO,CAAR","sourcesContent":["import Literal from \"../Literal.js\";\nimport Cursor from \"../../Cursor.js\";\n\ndescribe(\"Literal\", () => {\n  test(\"Zero characters, should throw.\", () => {\n    expect(() => {\n      const cursor = new Cursor(\"\");\n    }).toThrow();\n  });\n\n  test(\"One character, Exact.\", () => {\n    const cursor = new Cursor(\"2\");\n    const literal = new Literal(\"two\", \"2\");\n    const node = literal.parse(cursor);\n\n    expect(node.value).toBe(\"2\");\n    expect(node.type).toBe(\"two\");\n  });\n\n  test(\"Two characters, Exact.\", () => {\n    const cursor = new Cursor(\"20\");\n    const literal = new Literal(\"twenty\", \"20\");\n    const node = literal.parse(cursor);\n\n    expect(node.value).toBe(\"20\");\n    expect(node.type).toBe(\"twenty\");\n  });\n\n  test(\"One character, Within.\", () => {\n    const cursor = new Cursor(\"200\");\n    const literal = new Literal(\"two\", \"2\");\n    const node = literal.parse(cursor);\n\n    expect(node.value).toBe(\"2\");\n    expect(node.type).toBe(\"two\");\n    expect(cursor.getIndex()).toBe(1);\n    expect(cursor.getChar()).toBe(\"0\");\n\n  });\n\n  test(\"Two characters, Within.\", () => {\n    const cursor = new Cursor(\"200\");\n    const literal = new Literal(\"twenty\", \"20\");\n    const node = literal.parse(cursor);\n\n    expect(node.value).toBe(\"20\");\n    expect(node.type).toBe(\"twenty\");\n    expect(cursor.getIndex()).toBe(2);\n    expect(cursor.getChar()).toBe(\"0\");\n\n  });\n});\n"],"file":"Literal.js"}