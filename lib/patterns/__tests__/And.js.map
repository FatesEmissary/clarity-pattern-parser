{"version":3,"sources":["../../../src/patterns/__tests__/And.js"],"names":["describe","test","cursor","Cursor","firstName","Literal","lastName","fullName","And","node","parse","expect","type","toBe","children","value","isAtEnd"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEAA,QAAQ,CAAC,KAAD,EAAQ,MAAM;AACpBC,EAAAA,IAAI,CAAC,WAAD,EAAc,MAAM;AACtB,UAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAW,SAAX,CAAf;AACA,UAAMC,SAAS,GAAG,IAAIC,gBAAJ,CAAY,YAAZ,EAA0B,MAA1B,CAAlB;AACA,UAAMC,QAAQ,GAAG,IAAID,gBAAJ,CAAY,WAAZ,EAAyB,KAAzB,CAAjB;AACA,UAAME,QAAQ,GAAG,IAAIC,YAAJ,CAAQ,WAAR,EAAqB,CAACJ,SAAD,EAAYE,QAAZ,CAArB,CAAjB;AACA,UAAMG,IAAI,GAAGF,QAAQ,CAACG,KAAT,CAAeR,MAAf,CAAb;AAEAS,IAAAA,MAAM,CAACF,IAAI,CAACG,IAAN,CAAN,CAAkBC,IAAlB,CAAuB,WAAvB;AACAF,IAAAA,MAAM,CAACF,IAAI,CAACK,QAAL,CAAc,CAAd,EAAiBF,IAAlB,CAAN,CAA8BC,IAA9B,CAAmC,YAAnC;AACAF,IAAAA,MAAM,CAACF,IAAI,CAACK,QAAL,CAAc,CAAd,EAAiBC,KAAlB,CAAN,CAA+BF,IAA/B,CAAoC,MAApC;AACAF,IAAAA,MAAM,CAACF,IAAI,CAACK,QAAL,CAAc,CAAd,EAAiBF,IAAlB,CAAN,CAA8BC,IAA9B,CAAmC,WAAnC;AACAF,IAAAA,MAAM,CAACF,IAAI,CAACK,QAAL,CAAc,CAAd,EAAiBC,KAAlB,CAAN,CAA+BF,IAA/B,CAAoC,KAApC;AACAF,IAAAA,MAAM,CAACT,MAAM,CAACc,OAAP,EAAD,CAAN,CAAyBH,IAAzB,CAA8B,IAA9B;AACD,GAbG,CAAJ;AAcD,CAfO,CAAR","sourcesContent":["import Literal from \"../Literal.js\";\nimport Cursor from \"../../Cursor.js\";\nimport And from \"../And.js\";\n\ndescribe(\"And\", () => {\n  test(\"And Twice\", () => {\n    const cursor = new Cursor(\"JohnDoe\");\n    const firstName = new Literal(\"first-name\", \"John\");\n    const lastName = new Literal(\"last-name\", \"Doe\");\n    const fullName = new And(\"full-name\", [firstName, lastName]);\n    const node = fullName.parse(cursor);\n\n    expect(node.type).toBe(\"full-name\");\n    expect(node.children[0].type).toBe(\"first-name\");\n    expect(node.children[0].value).toBe(\"John\");\n    expect(node.children[1].type).toBe(\"last-name\");\n    expect(node.children[1].value).toBe(\"Doe\");\n    expect(cursor.isAtEnd()).toBe(true);\n  });\n});\n"],"file":"And.js"}