{"version":3,"sources":["../../src/patterns/Repeat.js"],"names":["Repeat","constructor","name","parser","dividerParser","clone","cursor","nodes","compositeNode","assertParser","parse","Error","reset","tryParser","createCompositeNode","mark","node","push","endIndex","lastIndex","tryDividerParser","error","length","ParseError","moveToMark","CompositeNode","startIndex","children"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEe,MAAMA,MAAN,CAAa;AAC1BC,EAAAA,WAAW,CAACC,IAAD,EAAOC,MAAP,EAAeC,aAAa,GAAG,IAA/B,EAAqC;AAC9C,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAM,CAACE,KAAP,EAAd;AACA,SAAKD,aAAL,GAAqBA,aAArB;AACA,SAAKE,MAAL,GAAc,IAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,aAAL,GAAqB,IAArB;AAEA,SAAKC,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AACb,QAAI,OAAO,KAAKN,MAAL,CAAYO,KAAnB,KAA6B,UAAjC,EAA6C;AAC3C,YAAM,IAAIC,KAAJ,CACJ,0DADI,CAAN;AAGD;AACF;;AAEDD,EAAAA,KAAK,CAACJ,MAAD,EAAS;AACZ,SAAKM,KAAL,CAAWN,MAAX;AACA,SAAKO,SAAL;AACA,SAAKC,mBAAL;AAEA,WAAO,KAAKN,aAAZ;AACD;;AAEDI,EAAAA,KAAK,CAACN,MAAD,EAAS;AACZ,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,aAAL,GAAqB,IAArB;AACD;;AAEDK,EAAAA,SAAS,GAAG;AACV,UAAME,IAAI,GAAG,KAAKT,MAAL,CAAYS,IAAZ,EAAb;;AAEA,QAAI;AACF,YAAMC,IAAI,GAAG,KAAKb,MAAL,CAAYO,KAAZ,CAAkB,KAAKJ,MAAvB,CAAb;AACA,WAAKC,KAAL,CAAWU,IAAX,CAAgBD,IAAhB;;AAEA,UAAIA,IAAI,CAACE,QAAL,KAAkB,KAAKZ,MAAL,CAAYa,SAAZ,EAAtB,EAA+C;AAC7C,YAAI,KAAKf,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,eAAKgB,gBAAL;AACD;;AAED,aAAKP,SAAL;AACD;AACF,KAXD,CAWE,OAAOQ,KAAP,EAAc;AACd,UAAI,KAAKd,KAAL,CAAWe,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,cAAM,IAAIC,mBAAJ,CAAgB,cAAa,KAAKrB,IAAK,GAAvC,CAAN;AACD;;AAED,WAAKI,MAAL,CAAYkB,UAAZ,CAAuBT,IAAvB;AACD;AACF;;AAEDK,EAAAA,gBAAgB,GAAG;AACjB,UAAML,IAAI,GAAG,KAAKT,MAAL,CAAYS,IAAZ,EAAb;;AAEA,QAAI;AACF,YAAMC,IAAI,GAAG,KAAKZ,aAAL,CAAmBM,KAAnB,CAAyB,KAAKJ,MAA9B,CAAb;AACA,WAAKC,KAAL,CAAWU,IAAX,CAAgBD,IAAhB;AACD,KAHD,CAGE,OAAOK,KAAP,EAAc;AACd,WAAKf,MAAL,CAAYkB,UAAZ,CAAuBT,IAAvB;AACD;AACF;;AAEDD,EAAAA,mBAAmB,GAAG;AACpB,SAAKN,aAAL,GAAqB,IAAIiB,sBAAJ,CAAkB,KAAKvB,IAAvB,EAA6B,KAAKK,KAAL,CAAW,CAAX,EAAcmB,UAA3C,EAAuD,KAAKnB,KAAL,CAAW,KAAKA,KAAL,CAAWe,MAAX,GAAkB,CAA7B,EAAgCJ,QAAvF,CAArB;AACA,SAAKV,aAAL,CAAmBmB,QAAnB,GAA8B,KAAKpB,KAAnC;AACD;;AAEDF,EAAAA,KAAK,GAAG;AACN,WAAO,IAAIL,MAAJ,CAAW,KAAKE,IAAhB,EAAsB,KAAKC,MAA3B,CAAP;AACD;;AA3EyB","sourcesContent":["import CompositeNode from \"../ast/CompositeNode.js\";\nimport ParseError from \"../ParseError.js\";\n\nexport default class Repeat {\n  constructor(name, parser, dividerParser = null) {\n    this.name = name;\n    this.parser = parser.clone();\n    this.dividerParser = dividerParser;\n    this.cursor = null;\n    this.nodes = [];\n    this.compositeNode = null;\n\n    this.assertParser();\n  }\n\n  assertParser() {\n    if (typeof this.parser.parse !== \"function\") {\n      throw new Error(\n        \"Invalid Argument: A Repetition can only accept a parser.\"\n      );\n    }\n  }\n\n  parse(cursor) {\n    this.reset(cursor);\n    this.tryParser();\n    this.createCompositeNode();\n\n    return this.compositeNode;\n  }\n\n  reset(cursor) {\n    this.cursor = cursor;\n    this.nodes = [];\n    this.compositeNode = null;\n  }\n\n  tryParser() {\n    const mark = this.cursor.mark();\n\n    try {\n      const node = this.parser.parse(this.cursor);\n      this.nodes.push(node);\n\n      if (node.endIndex !== this.cursor.lastIndex()) {\n        if (this.dividerParser != null) {\n          this.tryDividerParser();\n        }\n\n        this.tryParser();\n      }\n    } catch (error) {\n      if (this.nodes.length === 0) {\n        throw new ParseError(`Expected a ${this.name}.`);\n      }\n\n      this.cursor.moveToMark(mark);\n    }\n  }\n\n  tryDividerParser() {\n    const mark = this.cursor.mark();\n\n    try {\n      const node = this.dividerParser.parse(this.cursor);\n      this.nodes.push(node);\n    } catch (error) {\n      this.cursor.moveToMark(mark);\n    }\n  }\n\n  createCompositeNode() {\n    this.compositeNode = new CompositeNode(this.name, this.nodes[0].startIndex, this.nodes[this.nodes.length-1].endIndex);\n    this.compositeNode.children = this.nodes;\n  }\n\n  clone() {\n    return new Repeat(this.name, this.parser);\n  }\n}\n"],"file":"Repeat.js"}