{"version":3,"sources":["../../../src/patterns/composite/OrComposite.js"],"names":["OrComposite","name","patterns","_assertArguments","_children","length","Error","hasOptionalChildren","some","pattern","OptionalValue","OptionalComposite","cursor","mark","index","errors","node","_reset","_assertCursor","_tryPattern","Cursor","parse","setIndex","endIndex","error","push","moveToMark","throwError","reduce","furthestError","nextError","stack","StackInformation","CompositePattern"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,W;;;;;AACnB,uBAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAAA;;AAAA;;AAC1B,qFAAMD,IAAN,EAAYC,QAAZ;;AACA,UAAKC,gBAAL;;AAF0B;AAG3B;;;;uCAEkB;AACjB,UAAI,KAAKC,SAAL,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,cAAM,IAAIC,KAAJ,CACJ,sEADI,CAAN;AAGD;;AAED,UAAMC,mBAAmB,GAAG,KAAKH,SAAL,CAAeI,IAAf,CAC1B,UAAAC,OAAO;AAAA,eACLA,OAAO,YAAYC,sBAAnB,IAAoCD,OAAO,YAAYE,0BADlD;AAAA,OADmB,CAA5B;;AAKA,UAAIJ,mBAAJ,EAAyB;AACvB,cAAM,IAAID,KAAJ,CAAU,0CAAV,CAAN;AACD;AACF;;;2BAEMM,M,EAAQ;AACb,WAAKA,MAAL,GAAc,IAAd;AACA,WAAKC,IAAL,GAAY,IAAZ;AACA,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKC,MAAL,GAAc,EAAd;AACA,WAAKC,IAAL,GAAY,IAAZ;;AAEA,UAAIJ,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAKA,MAAL,GAAcA,MAAd;AACA,aAAKC,IAAL,GAAYD,MAAM,CAACC,IAAP,EAAZ;AACD;AACF;;;0BAEKD,M,EAAQ;AACZ,WAAKK,MAAL,CAAYL,MAAZ;;AACA,WAAKM,aAAL;;AACA,WAAKC,WAAL;;AAEA,aAAO,KAAKH,IAAZ;AACD;;;oCAEe;AACd,UAAI,EAAE,KAAKJ,MAAL,YAAuBQ,eAAzB,CAAJ,EAAsC;AACpC,cAAM,IAAId,KAAJ,CAAU,uCAAV,CAAN;AACD;AACF;;;kCAEa;AACZ,aAAO,IAAP,EAAa;AACX,YAAMG,OAAO,GAAG,KAAKL,SAAL,CAAe,KAAKU,KAApB,CAAhB;;AAEA,YAAI;AACF,eAAKE,IAAL,GAAYP,OAAO,CAACY,KAAR,CAAc,KAAKT,MAAnB,CAAZ;AACA,eAAKA,MAAL,CAAYU,QAAZ,CAAqB,KAAKN,IAAL,CAAUO,QAA/B;AACA;AACD,SAJD,CAIE,OAAOC,KAAP,EAAc;AACd,eAAKT,MAAL,CAAYU,IAAZ,CAAiBD,KAAjB;;AAEA,cAAI,KAAKV,KAAL,GAAa,CAAb,GAAiB,KAAKV,SAAL,CAAeC,MAApC,EAA4C;AAC1C,iBAAKS,KAAL;AACA,iBAAKF,MAAL,CAAYc,UAAZ,CAAuB,KAAKb,IAA5B;AACD,WAHD,MAGO;AACL,iBAAKc,UAAL;AACD;AACF;AACF;AACF;;;iCAEY;AACX,UAAMH,KAAK,GAAG,KAAKT,MAAL,CAAYa,MAAZ,CAAmB,UAACC,aAAD,EAAgBC,SAAhB,EAA8B;AAC7D,YAAID,aAAa,CAACf,KAAd,GAAsBgB,SAAS,CAAChB,KAApC,EAA2C;AACzC,iBAAOe,aAAP;AACD,SAFD,MAEO;AACL,iBAAOC,SAAP;AACD;AACF,OANa,CAAd;AAQAN,MAAAA,KAAK,CAACO,KAAN,CAAYN,IAAZ,CAAiB,IAAIO,yBAAJ,CAAqB,KAAKnB,IAA1B,EAAgC,IAAhC,CAAjB;AAEA,YAAMW,KAAN;AACD;;;0BAEKvB,I,EAAM;AACV,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,QAAAA,IAAI,GAAG,KAAKA,IAAZ;AACD;;AACD,aAAO,IAAID,WAAJ,CAAgBC,IAAhB,EAAsB,KAAKG,SAA3B,CAAP;AACD;;;qCAEe;AACd,aAAO,KAAKS,IAAZ;AACD;;;;EA9FsCoB,0B","sourcesContent":["import CompositePattern from \"./CompositePattern.js\";\nimport Cursor from \"../../Cursor.js\";\nimport StackInformation from \"../StackInformation.js\";\nimport OptionalValue from \"../value/OptionalValue.js\";\nimport OptionalComposite from \"./OptionalComposite.js\";\n\nexport default class OrComposite extends CompositePattern {\n  constructor(name, patterns) {\n    super(name, patterns);\n    this._assertArguments();\n  }\n\n  _assertArguments() {\n    if (this._children.length < 2) {\n      throw new Error(\n        \"Invalid Argument: OrValue needs to have more than one value pattern.\"\n      );\n    }\n\n    const hasOptionalChildren = this._children.some(\n      pattern =>\n        pattern instanceof OptionalValue || pattern instanceof OptionalComposite\n    );\n\n    if (hasOptionalChildren) {\n      throw new Error(\"OrComposite cannot have optional values.\");\n    }\n  }\n\n  _reset(cursor) {\n    this.cursor = null;\n    this.mark = null;\n    this.index = 0;\n    this.errors = [];\n    this.node = null;\n\n    if (cursor != null) {\n      this.cursor = cursor;\n      this.mark = cursor.mark();\n    }\n  }\n\n  parse(cursor) {\n    this._reset(cursor);\n    this._assertCursor();\n    this._tryPattern();\n\n    return this.node;\n  }\n\n  _assertCursor() {\n    if (!(this.cursor instanceof Cursor)) {\n      throw new Error(\"Invalid Arguments: Expected a cursor.\");\n    }\n  }\n\n  _tryPattern() {\n    while (true) {\n      const pattern = this._children[this.index];\n\n      try {\n        this.node = pattern.parse(this.cursor);\n        this.cursor.setIndex(this.node.endIndex);\n        break;\n      } catch (error) {\n        this.errors.push(error);\n\n        if (this.index + 1 < this._children.length) {\n          this.index++;\n          this.cursor.moveToMark(this.mark);\n        } else {\n          this.throwError();\n        }\n      }\n    }\n  }\n\n  throwError() {\n    const error = this.errors.reduce((furthestError, nextError) => {\n      if (furthestError.index > nextError.index) {\n        return furthestError;\n      } else {\n        return nextError;\n      }\n    });\n\n    error.stack.push(new StackInformation(this.mark, this));\n\n    throw error;\n  }\n\n  clone(name) {\n    if (typeof name !== \"string\") {\n      name = this.name;\n    }\n    return new OrComposite(name, this._children);\n  }\n\n  getCurrentMark(){\n    return this.mark;\n  }\n}\n"],"file":"OrComposite.js"}