{"version":3,"sources":["../../../src/patterns/composite/OrComposite.js"],"names":["OrComposite","name","patterns","_assertArguments","_children","length","Error","hasOptionalChildren","some","pattern","OptionalValue","OptionalComposite","cursor","mark","index","node","_reset","_tryPattern","parse","hasUnresolvedError","resolveError","moveToMark","endIndex","CompositePattern"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,W;;;;;AACnB,uBAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAAA;;AAAA;;AAC1B,qFAAMD,IAAN,EAAYC,QAAZ;;AACA,UAAKC,gBAAL;;AAF0B;AAG3B;;;;uCAEkB;AACjB,UAAI,KAAKC,SAAL,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,cAAM,IAAIC,KAAJ,CACJ,sEADI,CAAN;AAGD;;AAED,UAAMC,mBAAmB,GAAG,KAAKH,SAAL,CAAeI,IAAf,CAC1B,UAAAC,OAAO;AAAA,eACLA,OAAO,YAAYC,sBAAnB,IAAoCD,OAAO,YAAYE,0BADlD;AAAA,OADmB,CAA5B;;AAKA,UAAIJ,mBAAJ,EAAyB;AACvB,cAAM,IAAID,KAAJ,CAAU,0CAAV,CAAN;AACD;AACF;;;2BAEMM,M,EAAQ;AACb,WAAKA,MAAL,GAAc,IAAd;AACA,WAAKC,IAAL,GAAY,IAAZ;AACA,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKC,IAAL,GAAY,IAAZ;;AAEA,UAAIH,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAKA,MAAL,GAAcA,MAAd;AACA,aAAKC,IAAL,GAAYD,MAAM,CAACC,IAAP,EAAZ;AACD;AACF;;;0BAEKD,M,EAAQ;AACZ,WAAKI,MAAL,CAAYJ,MAAZ;;AACA,WAAKK,WAAL;;AAEA,aAAO,KAAKF,IAAZ;AACD;;;kCAEa;AACZ,aAAO,IAAP,EAAa;AACX,YAAMN,OAAO,GAAG,KAAKL,SAAL,CAAe,KAAKU,KAApB,CAAhB;AAEA,aAAKC,IAAL,GAAYN,OAAO,CAACS,KAAR,CAAc,KAAKN,MAAnB,CAAZ;;AAEA,YAAI,KAAKA,MAAL,CAAYO,kBAAZ,EAAJ,EAAsC;AACpC,cAAI,KAAKL,KAAL,GAAa,CAAb,GAAiB,KAAKV,SAAL,CAAeC,MAApC,EAA4C;AAC1C,iBAAKO,MAAL,CAAYQ,YAAZ;AACA,iBAAKN,KAAL;AACA,iBAAKF,MAAL,CAAYS,UAAZ,CAAuB,KAAKR,IAA5B;AACD,WAJD,MAIO;AACL,iBAAKE,IAAL,GAAY,IAAZ;AACA;AACD;AACF,SATD,MASO;AACL,eAAKH,MAAL,CAAYE,KAAZ,GAAoB,KAAKC,IAAL,CAAUO,QAA9B;AACA;AACD;AACF;AACF;;;0BAEKrB,I,EAAM;AACV,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,QAAAA,IAAI,GAAG,KAAKA,IAAZ;AACD;;AACD,aAAO,IAAID,WAAJ,CAAgBC,IAAhB,EAAsB,KAAKG,SAA3B,CAAP;AACD;;;qCAEgB;AACf,aAAO,KAAKS,IAAZ;AACD;;;;EAzEsCU,0B","sourcesContent":["import CompositePattern from \"./CompositePattern.js\";\nimport Cursor from \"../../Cursor.js\";\nimport StackInformation from \"../StackInformation.js\";\nimport OptionalValue from \"../value/OptionalValue.js\";\nimport OptionalComposite from \"./OptionalComposite.js\";\nimport ParseError from \"../ParseError.js\";\n\nexport default class OrComposite extends CompositePattern {\n  constructor(name, patterns) {\n    super(name, patterns);\n    this._assertArguments();\n  }\n\n  _assertArguments() {\n    if (this._children.length < 2) {\n      throw new Error(\n        \"Invalid Argument: OrValue needs to have more than one value pattern.\"\n      );\n    }\n\n    const hasOptionalChildren = this._children.some(\n      pattern =>\n        pattern instanceof OptionalValue || pattern instanceof OptionalComposite\n    );\n\n    if (hasOptionalChildren) {\n      throw new Error(\"OrComposite cannot have optional values.\");\n    }\n  }\n\n  _reset(cursor) {\n    this.cursor = null;\n    this.mark = null;\n    this.index = 0;\n    this.node = null;\n\n    if (cursor != null) {\n      this.cursor = cursor;\n      this.mark = cursor.mark();\n    }\n  }\n\n  parse(cursor) {\n    this._reset(cursor);\n    this._tryPattern();\n\n    return this.node;\n  }\n\n  _tryPattern() {\n    while (true) {\n      const pattern = this._children[this.index];\n\n      this.node = pattern.parse(this.cursor);\n\n      if (this.cursor.hasUnresolvedError()) {\n        if (this.index + 1 < this._children.length) {\n          this.cursor.resolveError();\n          this.index++;\n          this.cursor.moveToMark(this.mark);\n        } else {\n          this.node = null;\n          break;\n        }\n      } else {\n        this.cursor.index = this.node.endIndex;\n        break;\n      }\n    }\n  }\n\n  clone(name) {\n    if (typeof name !== \"string\") {\n      name = this.name;\n    }\n    return new OrComposite(name, this._children);\n  }\n\n  getCurrentMark() {\n    return this.mark;\n  }\n}\n"],"file":"OrComposite.js"}