{"version":3,"sources":["../../../src/patterns/composite/OrComposite.js"],"names":["OrComposite","name","patterns","_assertArguments","_children","length","Error","hasOptionalChildren","some","pattern","OptionalValue","OptionalComposite","cursor","mark","index","node","_reset","_tryPattern","addMatch","parse","hasUnresolvedError","resolveError","moveToMark","endIndex","rootPattern","Pattern","children","map","child","getPossibilities","reduce","acc","value","concat","CompositePattern"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,W;;;;;AACnB,uBAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAAA;;AAAA;;AAC1B,qFAAM,cAAN,EAAsBD,IAAtB,EAA4BC,QAA5B;;AACA,UAAKC,gBAAL;;AAF0B;AAG3B;;;;uCAEkB;AACjB,UAAI,KAAKC,SAAL,CAAeC,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,cAAM,IAAIC,KAAJ,CACJ,sEADI,CAAN;AAGD;;AAED,UAAMC,mBAAmB,GAAG,KAAKH,SAAL,CAAeI,IAAf,CAC1B,UAACC,OAAD;AAAA,eACEA,OAAO,YAAYC,sBAAnB,IAAoCD,OAAO,YAAYE,0BADzD;AAAA,OAD0B,CAA5B;;AAKA,UAAIJ,mBAAJ,EAAyB;AACvB,cAAM,IAAID,KAAJ,CAAU,0CAAV,CAAN;AACD;AACF;;;2BAEMM,M,EAAQ;AACb,WAAKA,MAAL,GAAcA,MAAd;AACA,WAAKC,IAAL,GAAY,IAAZ;AACA,WAAKC,KAAL,GAAa,CAAb;AACA,WAAKC,IAAL,GAAY,IAAZ;AACA,WAAKF,IAAL,GAAYD,MAAM,CAACC,IAAP,EAAZ;AACD;;;0BAEKD,M,EAAQ;AACZ,WAAKI,MAAL,CAAYJ,MAAZ;;AACA,WAAKK,WAAL;;AAEA,UAAI,KAAKF,IAAL,IAAa,IAAjB,EAAuB;AACrB,aAAKH,MAAL,CAAYM,QAAZ,CAAqB,IAArB,EAA2B,KAAKH,IAAhC;AACD;;AAED,aAAO,KAAKA,IAAZ;AACD;;;kCAEa;AACZ,aAAO,IAAP,EAAa;AACX,YAAMN,OAAO,GAAG,KAAKL,SAAL,CAAe,KAAKU,KAApB,CAAhB;AAEA,aAAKC,IAAL,GAAYN,OAAO,CAACU,KAAR,CAAc,KAAKP,MAAnB,CAAZ;;AAEA,YAAI,KAAKA,MAAL,CAAYQ,kBAAZ,EAAJ,EAAsC;AACpC,cAAI,KAAKN,KAAL,GAAa,CAAb,GAAiB,KAAKV,SAAL,CAAeC,MAApC,EAA4C;AAC1C,iBAAKO,MAAL,CAAYS,YAAZ;AACA,iBAAKP,KAAL;AACA,iBAAKF,MAAL,CAAYU,UAAZ,CAAuB,KAAKT,IAA5B;AACD,WAJD,MAIO;AACL,iBAAKE,IAAL,GAAY,IAAZ;AACA;AACD;AACF,SATD,MASO;AACL,eAAKH,MAAL,CAAYE,KAAZ,GAAoB,KAAKC,IAAL,CAAUQ,QAA9B;AACA;AACD;AACF;AACF;;;0BAEKtB,I,EAAM;AACV,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,QAAAA,IAAI,GAAG,KAAKA,IAAZ;AACD;;AACD,aAAO,IAAID,WAAJ,CAAgBC,IAAhB,EAAsB,KAAKG,SAA3B,CAAP;AACD;;;qCAEgBoB,W,EAAa;AAC5B,UAAIA,WAAW,IAAI,IAAf,IAAuB,EAAEA,WAAW,YAAYC,gBAAzB,CAA3B,EAA8D;AAC5DD,QAAAA,WAAW,GAAG,IAAd;AACD;;AAED,aAAO,KAAKE,QAAL,CACJC,GADI,CACA,UAACC,KAAD,EAAW;AACd,eAAOA,KAAK,CAACC,gBAAN,CAAuBL,WAAvB,CAAP;AACD,OAHI,EAIJM,MAJI,CAIG,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACtB,eAAOD,GAAG,CAACE,MAAJ,CAAWD,KAAX,CAAP;AACD,OANI,EAMF,EANE,CAAP;AAOD;;;;EAnFsCE,0B","sourcesContent":["import CompositePattern from \"./CompositePattern.js\";\nimport OptionalValue from \"../value/OptionalValue.js\";\nimport OptionalComposite from \"./OptionalComposite.js\";\nimport Pattern from \"../Pattern.js\";\n\nexport default class OrComposite extends CompositePattern {\n  constructor(name, patterns) {\n    super(\"or-composite\", name, patterns);\n    this._assertArguments();\n  }\n\n  _assertArguments() {\n    if (this._children.length < 2) {\n      throw new Error(\n        \"Invalid Argument: OrValue needs to have more than one value pattern.\"\n      );\n    }\n\n    const hasOptionalChildren = this._children.some(\n      (pattern) =>\n        pattern instanceof OptionalValue || pattern instanceof OptionalComposite\n    );\n\n    if (hasOptionalChildren) {\n      throw new Error(\"OrComposite cannot have optional values.\");\n    }\n  }\n\n  _reset(cursor) {\n    this.cursor = cursor;\n    this.mark = null;\n    this.index = 0;\n    this.node = null;\n    this.mark = cursor.mark();\n  }\n\n  parse(cursor) {\n    this._reset(cursor);\n    this._tryPattern();\n\n    if (this.node != null) {\n      this.cursor.addMatch(this, this.node);\n    }\n\n    return this.node;\n  }\n\n  _tryPattern() {\n    while (true) {\n      const pattern = this._children[this.index];\n\n      this.node = pattern.parse(this.cursor);\n\n      if (this.cursor.hasUnresolvedError()) {\n        if (this.index + 1 < this._children.length) {\n          this.cursor.resolveError();\n          this.index++;\n          this.cursor.moveToMark(this.mark);\n        } else {\n          this.node = null;\n          break;\n        }\n      } else {\n        this.cursor.index = this.node.endIndex;\n        break;\n      }\n    }\n  }\n\n  clone(name) {\n    if (typeof name !== \"string\") {\n      name = this.name;\n    }\n    return new OrComposite(name, this._children);\n  }\n\n  getPossibilities(rootPattern) {\n    if (rootPattern == null || !(rootPattern instanceof Pattern)) {\n      rootPattern = this;\n    }\n\n    return this.children\n      .map((child) => {\n        return child.getPossibilities(rootPattern);\n      })\n      .reduce((acc, value) => {\n        return acc.concat(value);\n      }, []);\n  }\n}\n"],"file":"OrComposite.js"}