{"version":3,"sources":["../../../src/patterns/composite/OptionalComposite.js"],"names":["OptionalComposite","pattern","_assertArguments","children","CompositePattern","Error","cursor","mark","node","parse","hasUnresolvedError","resolveError","moveToMark"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,iB;;;;;AACnB,6BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,2FAAM,oBAAN,EAA4B,CAACA,OAAD,CAA5B;;AACA,UAAKC,gBAAL;;AAFmB;AAGpB;;;;uCAEkB;AACjB,UAAI,EAAE,KAAKC,QAAL,CAAc,CAAd,aAA4BC,0BAA9B,CAAJ,EAAqD;AACnD,cAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;AACF;;;0BAEKC,M,EAAQ;AACZ,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAAP,EAAb;AACA,WAAKA,IAAL,GAAYA,IAAZ;AAEA,UAAMC,IAAI,GAAG,KAAKL,QAAL,CAAc,CAAd,EAAiBM,KAAjB,CAAuBH,MAAvB,CAAb;;AAEA,UAAIA,MAAM,CAACI,kBAAP,EAAJ,EAAiC;AAC/BJ,QAAAA,MAAM,CAACK,YAAP;AACAL,QAAAA,MAAM,CAACM,UAAP,CAAkBL,IAAlB;AACA,eAAO,IAAP;AACD,OAJD,MAIO;AACL,eAAOC,IAAP;AACD;AACF;;;4BAEO;AACN,aAAO,IAAIR,iBAAJ,CAAsB,KAAKG,QAAL,CAAc,CAAd,CAAtB,CAAP;AACD;;;qCAEgB;AACf,aAAO,KAAKI,IAAZ;AACD;;;;EAjC4CH,0B","sourcesContent":["import CompositePattern from \"./CompositePattern.js\";\n\nexport default class OptionalComposite extends CompositePattern {\n  constructor(pattern) {\n    super(\"optional-composite\", [pattern]);\n    this._assertArguments();\n  }\n\n  _assertArguments() {\n    if (!(this.children[0] instanceof CompositePattern)) {\n      throw new Error(\"Invalid Arguments: Expected a CompositePattern.\");\n    }\n  }\n\n  parse(cursor) {\n    const mark = cursor.mark();\n    this.mark = mark;\n\n    const node = this.children[0].parse(cursor);\n\n    if (cursor.hasUnresolvedError()) {\n      cursor.resolveError();\n      cursor.moveToMark(mark);\n      return null;\n    } else {\n      return node;\n    }\n  }\n\n  clone() {\n    return new OptionalComposite(this.children[0]);\n  }\n\n  getCurrentMark() {\n    return this.mark;\n  }\n}\n"],"file":"OptionalComposite.js"}