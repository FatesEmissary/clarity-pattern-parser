{"version":3,"sources":["../../../src/patterns/composite/OptionalComposite.js"],"names":["OptionalComposite","pattern","assertArguments","CompositePattern","Error","getType","getName","getPatterns","cursor","mark","parse","error","moveToMark","Pattern"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,iB;;;;;AACnB,6BAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;AACA,UAAKA,OAAL,GAAeA,OAAf;;AACA,UAAKC,eAAL;;AAHmB;AAIpB;;;;sCAEiB;AAChB,UAAI,EAAE,KAAKD,OAAL,YAAwBE,yBAA1B,CAAJ,EAAiD;AAC/C,cAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACD;AACF;;;8BAES;AACR,aAAO,KAAKH,OAAL,CAAaI,OAAb,EAAP;AACD;;;8BAES;AACR,aAAO,KAAKJ,OAAL,CAAaK,OAAb,EAAP;AACD;;;kCAEa;AACZ,aAAO,KAAKL,OAAL,CAAaM,WAAb,EAAP;AACD;;;0BAEKC,M,EAAQ;AACZ,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAAP,EAAb;;AAEA,UAAI;AACF,eAAO,KAAKR,OAAL,CAAaS,KAAb,CAAmBF,MAAnB,CAAP;AACD,OAFD,CAEE,OAAOG,KAAP,EAAc;AACdH,QAAAA,MAAM,CAACI,UAAP,CAAkBH,IAAlB;AACA,eAAO,IAAP;AACD;AACF;;;4BAEO;AACN,aAAO,IAAIT,iBAAJ,CAAsB,KAAKC,OAA3B,CAAP;AACD;;;;EAtC4CY,iB","sourcesContent":["import CompositePattern from \"./CompositePattern.js\";\nimport Pattern from \"../Pattern.js\";\n\nexport default class OptionalComposite extends Pattern {\n  constructor(pattern) {\n    super();\n    this.pattern = pattern;\n    this.assertArguments();\n  }\n\n  assertArguments() {\n    if (!(this.pattern instanceof CompositePattern)) {\n      throw new Error(\"Invalid Arguments: Expected a CompositePattern.\");\n    }\n  }\n\n  getType() {\n    return this.pattern.getType();\n  }\n\n  getName() {\n    return this.pattern.getName();\n  }\n\n  getPatterns() {\n    return this.pattern.getPatterns();\n  }\n\n  parse(cursor) {\n    const mark = cursor.mark();\n\n    try {\n      return this.pattern.parse(cursor);\n    } catch (error) {\n      cursor.moveToMark(mark);\n      return null;\n    }\n  }\n\n  clone() {\n    return new OptionalComposite(this.pattern);\n  }\n}\n"],"file":"OptionalComposite.js"}