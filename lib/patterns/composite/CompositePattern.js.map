{"version":3,"sources":["../../../src/patterns/composite/CompositePattern.js"],"names":["CompositePattern","type","name","children","Array","isArray","_children","Error","areAllPatterns","every","pattern","Pattern"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,gB;;;;;AACnB,4BAAYC,IAAZ,EAAkBC,IAAlB,EAAuC;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AAAA;;AAAA,yFAC/BF,IAD+B,EACzBC,IADyB,EACnBC,QADmB;AAEtC;;;;sCAEiB;AAChB,UAAI,CAACC,KAAK,CAACC,OAAN,CAAc,KAAKC,SAAnB,CAAL,EAAoC;AAClC,cAAM,IAAIC,KAAJ,CACJ,2EADI,CAAN;AAGD;;AAED,UAAMC,cAAc,GAAG,KAAKF,SAAL,CAAeG,KAAf,CACrB,UAAAC,OAAO;AAAA,eAAIA,OAAO,YAAYC,iBAAvB;AAAA,OADc,CAAvB;;AAIA,UAAI,CAACH,cAAL,EAAqB;AACnB,cAAM,IAAID,KAAJ,CACJ,mEADI,CAAN;AAGD,OAfe,CAiBhB;AACA;AACA;AACA;AACA;;AAED;;;4BAEO;AACN,YAAM,IAAIA,KAAJ,CAAU,qBAAV,CAAN;AACD;;;;EAhC2CI,iB","sourcesContent":["import Pattern from \"../Pattern.js\";\n\nexport default class CompositePattern extends Pattern {\n  constructor(type, name, children = []) {\n    super(type, name, children);\n  }\n\n  _assertChildren() {\n    if (!Array.isArray(this._children)) {\n      throw new Error(\n        \"Invalid Arguments: The patterns argument need to be an array of Patterns.\"\n      );\n    }\n\n    const areAllPatterns = this._children.every(\n      pattern => pattern instanceof Pattern\n    );\n\n    if (!areAllPatterns) {\n      throw new Error(\n        \"Invalid Argument: All patterns need to be an instance of Pattern.\"\n      );\n    }\n\n    // if (this._children.length < 2) {\n    //   throw new Error(\n    //     \"Invalid Argument: Composite Patterns need to have more than one value pattern.\"\n    //   );\n    // }\n\n  }\n\n  clone() {\n    throw new Error(\"Not Yet Implemented\");\n  }\n}\n"],"file":"CompositePattern.js"}