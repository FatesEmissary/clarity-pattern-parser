{"version":3,"sources":["../../../src/patterns/value/AnyOfThese.js"],"names":["AnyOfThese","name","characters","_reset","_assertArguments","Error","length","cursor","_assertCursor","_tryPattern","node","Cursor","mark","_isMatch","value","getChar","index","getIndex","ValueNode","incrementCursor","_processError","indexOf","message","ParseError","hasNext","next","ValuePattern"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,U;;;;;AACnB,sBAAYC,IAAZ,EAAkBC,UAAlB,EAA8B;AAAA;;AAAA;;AAC5B,oFAAMD,IAAN;AACA,UAAKC,UAAL,GAAkBA,UAAlB;;AAEA,UAAKC,MAAL;;AACA,UAAKC,gBAAL;;AAL4B;AAM7B;;;;uCAEkB;AACjB,UAAI,OAAO,KAAKF,UAAZ,KAA2B,QAA/B,EAAyC;AACvC,cAAM,IAAIG,KAAJ,CACJ,gFADI,CAAN;AAGD;;AAED,UAAI,KAAKH,UAAL,CAAgBI,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,cAAM,IAAID,KAAJ,CACJ,qFADI,CAAN;AAGD;AACF;;;0BAEKE,M,EAAQ;AACZ,WAAKJ,MAAL,CAAYI,MAAZ;;AACA,WAAKC,aAAL;;AACA,WAAKC,WAAL;;AACA,aAAO,KAAKC,IAAZ;AACD;;;oCAEe;AACd,UAAI,EAAE,KAAKH,MAAL,YAAuBI,eAAzB,CAAJ,EAAsC;AACpC,cAAM,IAAIN,KAAJ,CAAU,uCAAV,CAAN;AACD;AACF;;;2BAEME,M,EAAQ;AACb,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAClB,aAAKA,MAAL,GAAc,IAAd;AACA,aAAKK,IAAL,GAAY,IAAZ;AACD,OAHD,MAGO;AACL,aAAKL,MAAL,GAAcA,MAAd;AACA,aAAKK,IAAL,GAAY,KAAKL,MAAL,CAAYK,IAAZ,EAAZ;AACD;;AAED,WAAKF,IAAL,GAAY,IAAZ;AACD;;;kCAEa;AACZ,UAAI,KAAKG,QAAL,EAAJ,EAAqB;AACnB,YAAMC,KAAK,GAAG,KAAKP,MAAL,CAAYQ,OAAZ,EAAd;AACA,YAAMC,KAAK,GAAG,KAAKT,MAAL,CAAYU,QAAZ,EAAd;AAEA,aAAKP,IAAL,GAAY,IAAIQ,kBAAJ,CAAc,KAAKjB,IAAnB,EAAyBa,KAAzB,EAAgCE,KAAhC,EAAuCA,KAAvC,CAAZ;AACA,aAAKG,eAAL;AACD,OAND,MAMO;AACL,aAAKC,aAAL;AACD;AACF;;;+BAEU;AACT,aAAO,KAAKlB,UAAL,CAAgBmB,OAAhB,CAAwB,KAAKd,MAAL,CAAYQ,OAAZ,EAAxB,IAAiD,CAAC,CAAzD;AACD;;;oCAEe;AACd,UAAMO,OAAO,4DACX,KAAKpB,UADM,0BAEG,KAAKK,MAAL,CAAYQ,OAAZ,EAFH,kCAEgD,KAAKd,IAFrD,OAAb;AAIA,YAAM,IAAIsB,mBAAJ,CAAeD,OAAf,EAAwB,KAAKf,MAAL,CAAYU,QAAZ,EAAxB,EAAgD,IAAhD,CAAN;AACD;;;sCAEiB;AAChB,UAAI,KAAKV,MAAL,CAAYiB,OAAZ,EAAJ,EAA2B;AACzB,aAAKjB,MAAL,CAAYkB,IAAZ;AACD;AACF;;;4BAEO;AACN,aAAO,IAAIzB,UAAJ,CAAe,KAAKC,IAApB,EAA0B,KAAKC,UAA/B,CAAP;AACD;;;;EAhFqCwB,sB","sourcesContent":["import ValuePattern from \"./ValuePattern.js\";\nimport ParseError from \"../ParseError.js\";\nimport ValueNode from \"../../ast/ValueNode.js\";\nimport Cursor from \"../../Cursor.js\";\n\nexport default class AnyOfThese extends ValuePattern {\n  constructor(name, characters) {\n    super(name);\n    this.characters = characters;\n\n    this._reset();\n    this._assertArguments();\n  }\n\n  _assertArguments() {\n    if (typeof this.characters !== \"string\") {\n      throw new Error(\n        \"Invalid Arguments: The characters argument needs to be a string of characters.\"\n      );\n    }\n\n    if (this.characters.length < 1) {\n      throw new Error(\n        \"Invalid Arguments: The characters argument needs to be at least one character long.\"\n      );\n    }\n  }\n\n  parse(cursor) {\n    this._reset(cursor);\n    this._assertCursor();\n    this._tryPattern();\n    return this.node;\n  }\n\n  _assertCursor() {\n    if (!(this.cursor instanceof Cursor)) {\n      throw new Error(\"Invalid Arguments: Expected a cursor.\");\n    }\n  }\n\n  _reset(cursor) {\n    if (cursor == null) {\n      this.cursor = null;\n      this.mark = null;\n    } else {\n      this.cursor = cursor;\n      this.mark = this.cursor.mark();\n    }\n\n    this.node = null;\n  }\n\n  _tryPattern() {\n    if (this._isMatch()) {\n      const value = this.cursor.getChar();\n      const index = this.cursor.getIndex();\n\n      this.node = new ValueNode(this.name, value, index, index);\n      this.incrementCursor();\n    } else {\n      this._processError();\n    }\n  }\n\n  _isMatch() {\n    return this.characters.indexOf(this.cursor.getChar()) > -1;\n  }\n\n  _processError() {\n    const message = `ParseError: Expected one of these characters, '${\n      this.characters\n    }' but found '${this.cursor.getChar()}' while parsing for '${this.name}'.`;\n\n    throw new ParseError(message, this.cursor.getIndex(), this);\n  }\n\n  incrementCursor() {\n    if (this.cursor.hasNext()) {\n      this.cursor.next();\n    }\n  }\n\n  clone() {\n    return new AnyOfThese(this.name, this.characters);\n  }\n\n}\n"],"file":"AnyOfThese.js"}