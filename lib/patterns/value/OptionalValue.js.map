{"version":3,"sources":["../../../src/patterns/value/OptionalValue.js"],"names":["OptionalValue","pattern","assertArguments","ValuePattern","Error","getName","getType","getPatterns","cursor","mark","parse","error","moveToMark"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;;;;;AACnB,yBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;AACA,UAAKA,OAAL,GAAeA,OAAf;;AACA,UAAKC,eAAL;;AAHmB;AAIpB;;;;sCAEiB;AAChB,UAAI,EAAE,KAAKD,OAAL,YAAwBE,sBAA1B,CAAJ,EAA6C;AAC3C,cAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF;;;8BAES;AACR,aAAO,KAAKH,OAAL,CAAaI,OAAb,EAAP;AACD;;;8BAEQ;AACP,aAAO,KAAKJ,OAAL,CAAaK,OAAb,EAAP;AACD;;;kCAEa;AACZ,aAAO,KAAKL,OAAL,CAAaM,WAAb,EAAP;AACD;;;0BAEKC,M,EAAQ;AACZ,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAAP,EAAb;;AAEA,UAAI;AACF,eAAO,KAAKR,OAAL,CAAaS,KAAb,CAAmBF,MAAnB,CAAP;AACD,OAFD,CAEE,OAAOG,KAAP,EAAc;AACdH,QAAAA,MAAM,CAACI,UAAP,CAAkBH,IAAlB;AACA,eAAO,IAAP;AACD;AACF;;;4BAEO;AACN,aAAO,IAAIT,aAAJ,CAAkB,KAAKC,OAAvB,CAAP;AACD;;;;EAtCwCE,sB","sourcesContent":["import ValuePattern from \"./ValuePattern.js\";\n\nexport default class OptionalValue extends ValuePattern {\n  constructor(pattern) {\n    super();\n    this.pattern = pattern;\n    this.assertArguments();\n  }\n\n  assertArguments() {\n    if (!(this.pattern instanceof ValuePattern)) {\n      throw new Error(\"Invalid Arguments: Expected a ValuePattern.\");\n    }\n  }\n\n  getName() {\n    return this.pattern.getName();\n  }\n\n  getType(){\n    return this.pattern.getType();\n  }\n  \n  getPatterns() {\n    return this.pattern.getPatterns();\n  }\n\n  parse(cursor) {\n    const mark = cursor.mark();\n\n    try {\n      return this.pattern.parse(cursor);\n    } catch (error) {\n      cursor.moveToMark(mark);\n      return null;\n    }\n  }\n\n  clone() {\n    return new OptionalValue(this.pattern);\n  }\n}\n"],"file":"OptionalValue.js"}