{"version":3,"sources":["../../../src/patterns/value/OptionalValue.js"],"names":["OptionalValue","pattern","_assertArguments","children","ValuePattern","Error","cursor","parseError","mark","parse","error","moveToMark"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;;;;;AACnB,yBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,uFAAM,gBAAN,EAAwB,CAACA,OAAD,CAAxB;;AACA,UAAKC,gBAAL;;AAFmB;AAGpB;;;;uCAEkB;AACjB,UAAI,EAAE,KAAKC,QAAL,CAAc,CAAd,aAA4BC,sBAA9B,CAAJ,EAAiD;AAC/C,cAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;AACF;;;0BAEKC,M,EAAQC,U,EAAY;AACxB,UAAMC,IAAI,GAAGF,MAAM,CAACE,IAAP,EAAb;;AAEA,UAAI;AACF,eAAO,KAAKL,QAAL,CAAc,CAAd,EAAiBM,KAAjB,CAAuBH,MAAvB,EAA+BC,UAA/B,CAAP;AACD,OAFD,CAEE,OAAOG,KAAP,EAAc;AACdJ,QAAAA,MAAM,CAACK,UAAP,CAAkBH,IAAlB;AACA,eAAO,IAAP;AACD;AACF;;;4BAEO;AACN,aAAO,IAAIR,aAAJ,CAAkB,KAAKG,QAAL,CAAc,CAAd,CAAlB,CAAP;AACD;;;qCAEe;AACd,aAAO,KAAKK,IAAZ;AACD;;;;EA7BwCJ,sB","sourcesContent":["import ValuePattern from \"./ValuePattern.js\";\n\nexport default class OptionalValue extends ValuePattern {\n  constructor(pattern) {\n    super(\"optional-value\", [pattern]);\n    this._assertArguments();\n  }\n\n  _assertArguments() {\n    if (!(this.children[0] instanceof ValuePattern)) {\n      throw new Error(\"Invalid Arguments: Expected a ValuePattern.\");\n    }\n  }\n\n  parse(cursor, parseError) {\n    const mark = cursor.mark();\n\n    try {\n      return this.children[0].parse(cursor, parseError);\n    } catch (error) {\n      cursor.moveToMark(mark);\n      return null;\n    }\n  }\n\n  clone() {\n    return new OptionalValue(this.children[0]);\n  }\n\n  getCurrentMark(){\n    return this.mark;\n  }\n}\n"],"file":"OptionalValue.js"}