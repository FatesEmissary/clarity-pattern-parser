{"version":3,"sources":["../../../src/patterns/value/NotValue.js"],"names":["NotValue","name","pattern","children","Pattern","Error","cursor","match","node","mark","_reset","_tryPattern","parse","hasUnresolvedError","resolveError","moveToMark","getChar","_processMatch","length","parseError","ParseError","throwError","ValueNode","index","endIndex","addMatch"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,Q;;;;;AACnB,oBAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAAA,iFACnB,WADmB,EACND,IADM,EACA,CAACC,OAAD,CADA;AAE1B;;;;sCAEiB;AAChB,UAAI,EAAE,KAAKC,QAAL,CAAc,CAAd,aAA4BC,iBAA9B,CAAJ,EAA4C;AAC1C,cAAM,IAAIC,KAAJ,CACJ,+DADI,CAAN;AAGD;;AAED,UAAI,OAAO,KAAKJ,IAAZ,KAAqB,QAAzB,EAAmC;AACjC,cAAM,IAAII,KAAJ,CAAU,kDAAV,CAAN;AACD;AACF;;;2BAEMC,M,EAAQ;AACb,WAAKC,KAAL,GAAa,EAAb;AACA,WAAKC,IAAL,GAAY,IAAZ;AACA,WAAKF,MAAL,GAAcA,MAAd;AACA,WAAKG,IAAL,GAAY,KAAKH,MAAL,CAAYG,IAAZ,EAAZ;AACD;;;0BAEKH,M,EAAQ;AACZ,WAAKI,MAAL,CAAYJ,MAAZ;;AACA,WAAKK,WAAL;;AAEA,aAAO,KAAKH,IAAZ;AACD;;;kCAEa;AACZ,aAAO,IAAP,EAAa;AACX,YAAMC,IAAI,GAAG,KAAKH,MAAL,CAAYG,IAAZ,EAAb;AACA,aAAKN,QAAL,CAAc,CAAd,EAAiBS,KAAjB,CAAuB,KAAKN,MAA5B;;AAEA,YAAI,KAAKA,MAAL,CAAYO,kBAAZ,EAAJ,EAAsC;AACpC,eAAKP,MAAL,CAAYQ,YAAZ;AACA,eAAKR,MAAL,CAAYS,UAAZ,CAAuBN,IAAvB;AACA,eAAKF,KAAL,IAAc,KAAKD,MAAL,CAAYU,OAAZ,EAAd;AACA;AACD,SALD,MAKO;AACL,eAAKV,MAAL,CAAYS,UAAZ,CAAuBN,IAAvB;AACA;AACD;AACF;;AAED,WAAKQ,aAAL;AACD;;;oCAEe;AACd,UAAI,KAAKV,KAAL,CAAWW,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,YAAMC,UAAU,GAAG,IAAIC,mBAAJ,4DACmC,KAAKjB,QAAL,CAAc,CAAd,EAAiBF,IADpD,gBAEjB,KAAKQ,IAFY,EAGjB,IAHiB,CAAnB;AAKA,aAAKH,MAAL,CAAYe,UAAZ,CAAuBF,UAAvB;AACD,OAPD,MAOO;AACL,aAAKX,IAAL,GAAY,IAAIc,kBAAJ,CACV,WADU,EAEV,KAAKrB,IAFK,EAGV,KAAKM,KAHK,EAIV,KAAKE,IAJK,EAKV,KAAKA,IALK,CAAZ;AAQA,aAAKH,MAAL,CAAYiB,KAAZ,GAAoB,KAAKf,IAAL,CAAUgB,QAA9B;AACA,aAAKlB,MAAL,CAAYmB,QAAZ,CAAqB,IAArB,EAA2B,KAAKjB,IAAhC;AACD;AACF;;;0BAEKP,I,EAAM;AACV,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,QAAAA,IAAI,GAAG,KAAKA,IAAZ;AACD;;AACD,aAAO,IAAID,QAAJ,CAAaC,IAAb,EAAmB,KAAKE,QAAL,CAAc,CAAd,CAAnB,CAAP;AACD;;;uCAEkB;AACjB,aAAO,EAAP;AACD;;;gCAEW;AACV,aAAO,EAAP;AACD;;;;EArFmCC,iB","sourcesContent":["import ValuePattern from \"./ValuePattern.js\";\nimport ValueNode from \"../../ast/ValueNode.js\";\nimport ParseError from \"../ParseError.js\";\nimport Pattern from \"../Pattern.js\";\n\nexport default class NotValue extends Pattern {\n  constructor(name, pattern) {\n    super(\"not-value\", name, [pattern]);\n  }\n\n  _assertChildren() {\n    if (!(this.children[0] instanceof Pattern)) {\n      throw new Error(\n        \"Invalid Arguments: Expected the pattern to be a ValuePattern.\"\n      );\n    }\n\n    if (typeof this.name !== \"string\") {\n      throw new Error(\"Invalid Arguments: Expected name to be a string.\");\n    }\n  }\n\n  _reset(cursor) {\n    this.match = \"\";\n    this.node = null;\n    this.cursor = cursor;\n    this.mark = this.cursor.mark();\n  }\n\n  parse(cursor) {\n    this._reset(cursor);\n    this._tryPattern();\n\n    return this.node;\n  }\n\n  _tryPattern() {\n    while (true) {\n      const mark = this.cursor.mark();\n      this.children[0].parse(this.cursor);\n\n      if (this.cursor.hasUnresolvedError()) {\n        this.cursor.resolveError();\n        this.cursor.moveToMark(mark);\n        this.match += this.cursor.getChar();\n        break;\n      } else {\n        this.cursor.moveToMark(mark);\n        break;\n      }\n    }\n\n    this._processMatch();\n  }\n\n  _processMatch() {\n    if (this.match.length === 0) {\n      const parseError = new ParseError(\n        `Didn't find any characters that didn't match the ${this.children[0].name} pattern.`,\n        this.mark,\n        this\n      );\n      this.cursor.throwError(parseError);\n    } else {\n      this.node = new ValueNode(\n        \"not-value\",\n        this.name,\n        this.match,\n        this.mark,\n        this.mark\n      );\n\n      this.cursor.index = this.node.endIndex;\n      this.cursor.addMatch(this, this.node);\n    }\n  }\n\n  clone(name) {\n    if (typeof name !== \"string\") {\n      name = this.name;\n    }\n    return new NotValue(name, this.children[0]);\n  }\n\n  getPossibilities() {\n    return [];\n  }\n\n  getTokens() {\n    return [];\n  }\n}\n"],"file":"NotValue.js"}