{"version":3,"sources":["../src/Cursor.js"],"names":["Cursor","string","index","length","assertValidity","isNullOrEmpty","Error","value","hasNext","hasPrevious","Mark","mark","cursor","charAt"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,M;;;AACnB,kBAAYC,MAAZ,EAAoB;AAAA;;AAClB,SAAKA,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,MAAL,GAAcF,MAAM,CAACE,MAArB;AACA,SAAKC,cAAL;AACD;;;;qCAEgB;AACf,UAAI,KAAKC,aAAL,CAAmB,KAAKJ,MAAxB,CAAJ,EAAqC;AACnC,cAAM,IAAIK,KAAJ,CACJ,mFADI,CAAN;AAGD;AACF;;;kCAEaC,K,EAAO;AACnB,aAAOA,KAAK,IAAI,IAAT,IAAkB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACJ,MAAN,KAAiB,CAAvE;AACD;;;8BAES;AACR,aAAO,KAAKD,KAAL,GAAa,CAAb,GAAiB,KAAKD,MAAL,CAAYE,MAApC;AACD;;;kCAEa;AACZ,aAAO,KAAKD,KAAL,GAAa,CAAb,IAAkB,CAAzB;AACD;;;2BAEM;AACL,UAAI,KAAKM,OAAL,EAAJ,EAAoB;AAClB,aAAKN,KAAL;AACD,OAFD,MAEO;AACL,cAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACD;AACF;;;+BAEU;AACT,UAAI,KAAKG,WAAL,EAAJ,EAAwB;AACtB,aAAKP,KAAL;AACD,OAFD,MAEO;AACL,cAAM,IAAII,KAAJ,CAAU,kCAAV,CAAN;AACD;AACF;;;2BAEM;AACL,aAAO,IAAII,aAAJ,CAAS,IAAT,EAAe,KAAKR,KAApB,CAAP;AACD;;;+BAEUS,I,EAAM;AACf,UAAIA,IAAI,YAAYD,aAAhB,IAAwBC,IAAI,CAACC,MAAL,KAAgB,IAA5C,EAAkD;AAChD,aAAKV,KAAL,GAAaS,IAAI,CAACT,KAAlB;AACA,eAAO,IAAP;AACD,OAHD,MAGO;AACL,cAAM,IAAII,KAAJ,CACJ,wFADI,CAAN;AAGD;AACF;;;sCAEiB;AAChB,WAAKJ,KAAL,GAAa,CAAb;AACD;;;iCAEY;AACX,WAAKA,KAAL,GAAa,KAAKD,MAAL,CAAYE,MAAZ,GAAqB,CAAlC;AACD;;;8BAES;AACR,aAAO,KAAKF,MAAL,CAAYY,MAAZ,CAAmB,KAAKX,KAAxB,CAAP;AACD;;;+BAEU;AACT,aAAO,KAAKA,KAAZ;AACD;;;6BAEQA,K,EAAO;AACd,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,aAAKA,KAAL,GAAaA,KAAb;AACD;AACF;;;oCAEe;AACd,aAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;8BAES;AACR,aAAO,KAAKA,KAAL,KAAe,KAAKD,MAAL,CAAYE,MAAZ,GAAqB,CAA3C;AACD;;;gCAEW;AACV,aAAO,KAAKA,MAAL,GAAc,CAArB;AACD","sourcesContent":["import Mark from \"./Mark\";\n\nexport default class Cursor {\n  constructor(string) {\n    this.string = string;\n    this.index = 0;\n    this.length = string.length;\n    this.assertValidity();\n  }\n\n  assertValidity() {\n    if (this.isNullOrEmpty(this.string)) {\n      throw new Error(\n        \"Illegal Argument: Cursor needs to have a string that has a length greater than 0.\"\n      );\n    }\n  }\n\n  isNullOrEmpty(value) {\n    return value == null || (typeof value === \"string\" && value.length === 0);\n  }\n\n  hasNext() {\n    return this.index + 1 < this.string.length;\n  }\n\n  hasPrevious() {\n    return this.index - 1 >= 0;\n  }\n\n  next() {\n    if (this.hasNext()) {\n      this.index++;\n    } else {\n      throw new Error(\"Cursor: Out of Bounds Exception.\");\n    }\n  }\n\n  previous() {\n    if (this.hasPrevious()) {\n      this.index--;\n    } else {\n      throw new Error(\"Cursor: Out of Bounds Exception.\");\n    }\n  }\n\n  mark() {\n    return new Mark(this, this.index);\n  }\n\n  moveToMark(mark) {\n    if (mark instanceof Mark && mark.cursor === this) {\n      this.index = mark.index;\n      return true;\n    } else {\n      throw new Error(\n        \"Illegal Argument: The mark needs to be an instance of Mark and created by this cursor.\"\n      );\n    }\n  }\n\n  moveToBeginning() {\n    this.index = 0;\n  }\n\n  moveToLast() {\n    this.index = this.string.length - 1;\n  }\n\n  getChar() {\n    return this.string.charAt(this.index);\n  }\n\n  getIndex() {\n    return this.index;\n  }\n\n  setIndex(index) {\n    if (typeof index === \"number\") {\n      this.index = index;\n    }\n  }\n\n  isAtBeginning() {\n    return this.index === 0;\n  }\n\n  isAtEnd() {\n    return this.index === this.string.length - 1;\n  }\n\n  lastIndex() {\n    return this.length - 1;\n  }\n}\n"],"file":"Cursor.js"}