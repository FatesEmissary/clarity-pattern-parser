{"version":3,"sources":["../src/Cursor.js"],"names":["Cursor","string","verbose","index","length","parseError","isInErrorState","assertValidity","isNullOrEmpty","Error","value","hasNext","hasPrevious","mark","setIndex","charAt","lastIndex"],"mappings":";;;;;;;AAAA;;;;;;;;;;IAEqBA,M;;;AACnB,kBAAYC,MAAZ,EAAsC;AAAA,mFAAJ,EAAI;AAAA,QAAhBC,OAAgB,QAAhBA,OAAgB;;AAAA;;AACpC,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKE,KAAL,GAAa,CAAb;AACA,SAAKC,MAAL,GAAcH,MAAM,CAACG,MAArB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA,SAAKH,OAAL,GAAe,OAAOA,OAAP,KAAmB,SAAnB,GAA+BA,OAA/B,GAAyC,KAAxD;AACA,SAAKI,cAAL,GAAsB,KAAtB;AACA,SAAKC,cAAL;AACD;;;;+BAEUF,U,EAAY;AACrB,WAAKC,cAAL,GAAsB,IAAtB;;AACA,UAAI,KAAKD,UAAL,IAAmB,IAAnB,IAA2BA,UAAU,CAACF,KAAX,IAAoB,KAAKE,UAAL,CAAgBF,KAAnE,EAAyE;AACvE,aAAKE,UAAL,GAAkBA,UAAlB;AACD;AACF;;;mCAEc;AACb,WAAKC,cAAL,GAAsB,KAAtB;AACD;;;yCAEoB;AACnB,aAAO,KAAKA,cAAZ;AACD;;;qCAEgB;AACf,UAAI,KAAKE,aAAL,CAAmB,KAAKP,MAAxB,CAAJ,EAAqC;AACnC,cAAM,IAAIQ,KAAJ,CACJ,mFADI,CAAN;AAGD;AACF;;;kCAEaC,K,EAAO;AACnB,aAAOA,KAAK,IAAI,IAAT,IAAkB,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACN,MAAN,KAAiB,CAAvE;AACD;;;8BAES;AACR,aAAO,KAAKD,KAAL,GAAa,CAAb,GAAiB,KAAKF,MAAL,CAAYG,MAApC;AACD;;;kCAEa;AACZ,aAAO,KAAKD,KAAL,GAAa,CAAb,IAAkB,CAAzB;AACD;;;2BAEM;AACL,UAAI,KAAKQ,OAAL,EAAJ,EAAoB;AAClB,aAAKR,KAAL;AACD,OAFD,MAEO;AACL,cAAM,IAAIM,KAAJ,CAAU,kCAAV,CAAN;AACD;AACF;;;+BAEU;AACT,UAAI,KAAKG,WAAL,EAAJ,EAAwB;AACtB,aAAKT,KAAL;AACD,OAFD,MAEO;AACL,cAAM,IAAIM,KAAJ,CAAU,kCAAV,CAAN;AACD;AACF;;;2BAEM;AACL,aAAO,KAAKN,KAAZ;AACD;;;+BAEUU,I,EAAM;AACf,WAAKC,QAAL,CAAcD,IAAd;AACD;;;sCAEiB;AAChB,WAAKV,KAAL,GAAa,CAAb;AACD;;;iCAEY;AACX,WAAKA,KAAL,GAAa,KAAKF,MAAL,CAAYG,MAAZ,GAAqB,CAAlC;AACD;;;8BAES;AACR,aAAO,KAAKH,MAAL,CAAYc,MAAZ,CAAmB,KAAKZ,KAAxB,CAAP;AACD;;;+BAEU;AACT,aAAO,KAAKA,KAAZ;AACD;;;6BAEQA,K,EAAO;AACd,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,YAAIA,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,KAAKa,SAAL,EAAzB,EAA2C;AACzC,gBAAM,IAAIP,KAAJ,CAAU,kCAAV,CAAN;AACD;;AAED,aAAKN,KAAL,GAAaA,KAAb;AACD;AACF;;;oCAEe;AACd,aAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;8BAES;AACR,aAAO,KAAKA,KAAL,KAAe,KAAKF,MAAL,CAAYG,MAAZ,GAAqB,CAA3C;AACD;;;gCAEW;AACV,aAAO,KAAKA,MAAL,GAAc,CAArB;AACD","sourcesContent":["import Mark from \"./Mark.js\";\n\nexport default class Cursor {\n  constructor(string, { verbose } = {}) {\n    this.string = string;\n    this.index = 0;\n    this.length = string.length;\n    this.parseError = null;\n    this.verbose = typeof verbose === \"boolean\" ? verbose : false;\n    this.isInErrorState = false;\n    this.assertValidity();\n  }\n\n  throwError(parseError) {\n    this.isInErrorState = true;\n    if (this.parseError == null || parseError.index >= this.parseError.index){\n      this.parseError = parseError;\n    }\n  }\n\n  resolveError() {\n    this.isInErrorState = false;\n  }\n\n  hasUnresolvedError() {\n    return this.isInErrorState;\n  }\n\n  assertValidity() {\n    if (this.isNullOrEmpty(this.string)) {\n      throw new Error(\n        \"Illegal Argument: Cursor needs to have a string that has a length greater than 0.\"\n      );\n    }\n  }\n\n  isNullOrEmpty(value) {\n    return value == null || (typeof value === \"string\" && value.length === 0);\n  }\n\n  hasNext() {\n    return this.index + 1 < this.string.length;\n  }\n\n  hasPrevious() {\n    return this.index - 1 >= 0;\n  }\n\n  next() {\n    if (this.hasNext()) {\n      this.index++;\n    } else {\n      throw new Error(\"Cursor: Out of Bounds Exception.\");\n    }\n  }\n\n  previous() {\n    if (this.hasPrevious()) {\n      this.index--;\n    } else {\n      throw new Error(\"Cursor: Out of Bounds Exception.\");\n    }\n  }\n\n  mark() {\n    return this.index;\n  }\n\n  moveToMark(mark) {\n    this.setIndex(mark);\n  }\n\n  moveToBeginning() {\n    this.index = 0;\n  }\n\n  moveToLast() {\n    this.index = this.string.length - 1;\n  }\n\n  getChar() {\n    return this.string.charAt(this.index);\n  }\n\n  getIndex() {\n    return this.index;\n  }\n\n  setIndex(index) {\n    if (typeof index === \"number\") {\n      if (index < 0 || index > this.lastIndex()) {\n        throw new Error(\"Cursor: Out of Bounds Exception.\");\n      }\n\n      this.index = index;\n    }\n  }\n\n  isAtBeginning() {\n    return this.index === 0;\n  }\n\n  isAtEnd() {\n    return this.index === this.string.length - 1;\n  }\n\n  lastIndex() {\n    return this.length - 1;\n  }\n}\n"],"file":"Cursor.js"}