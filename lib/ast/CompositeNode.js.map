{"version":3,"sources":["../../src/ast/CompositeNode.js"],"names":["CompositeNode","Node","constructor","type","startIndex","endIndex","children","clone","node","map","child"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,aAAN,SAA4BC,aAA5B,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,IAAD,EAAOC,UAAU,GAAG,CAApB,EAAuBC,QAAQ,GAAG,CAAlC,EAAqC;AAC9C,UAAMF,IAAN,EAAYC,UAAZ,EAAwBC,QAAxB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,UAAMC,IAAI,GAAG,IAAIR,aAAJ,CAAkB,KAAKG,IAAvB,EAA6B,KAAKC,UAAlC,EAA8C,KAAKC,QAAnD,CAAb;AACAG,IAAAA,IAAI,CAACF,QAAL,GAAgB,KAAKA,QAAL,CAAcG,GAAd,CAAkBC,KAAK,IAAI;AACzC,aAAOA,KAAK,CAACH,KAAN,EAAP;AACD,KAFe,CAAhB;AAIA,WAAOC,IAAP;AACD;;AAb6C","sourcesContent":["import Node from \"./Node.js\";\n\nexport default class CompositeNode extends Node {\n  constructor(type, startIndex = 0, endIndex = 0) {\n    super(type, startIndex, endIndex);\n    this.children = [];\n  }\n\n  clone() {\n    const node = new CompositeNode(this.type, this.startIndex, this.endIndex);\n    node.children = this.children.map(child => {\n      return child.clone();\n    });\n\n    return node;\n  }\n}\n"],"file":"CompositeNode.js"}