{"version":3,"sources":["../../src/ast/CompositeNode.js"],"names":["CompositeNode","type","startIndex","endIndex","children","node","map","child","clone","Node"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;;;;;AACnB,yBAAYC,IAAZ,EAAgD;AAAA;;AAAA,QAA9BC,UAA8B,uEAAjB,CAAiB;AAAA,QAAdC,QAAc,uEAAH,CAAG;;AAAA;;AAC9C,uFAAMF,IAAN,EAAYC,UAAZ,EAAwBC,QAAxB;AACA,UAAKC,QAAL,GAAgB,EAAhB;AAF8C;AAG/C;;;;4BAEO;AACN,UAAMC,IAAI,GAAG,IAAIL,aAAJ,CAAkB,KAAKC,IAAvB,EAA6B,KAAKC,UAAlC,EAA8C,KAAKC,QAAnD,CAAb;AACAE,MAAAA,IAAI,CAACD,QAAL,GAAgB,KAAKA,QAAL,CAAcE,GAAd,CAAkB,UAAAC,KAAK,EAAI;AACzC,eAAOA,KAAK,CAACC,KAAN,EAAP;AACD,OAFe,CAAhB;AAIA,aAAOH,IAAP;AACD;;;;EAbwCI,c","sourcesContent":["import Node from \"./Node.js\";\n\nexport default class CompositeNode extends Node {\n  constructor(type, startIndex = 0, endIndex = 0) {\n    super(type, startIndex, endIndex);\n    this.children = [];\n  }\n\n  clone() {\n    const node = new CompositeNode(this.type, this.startIndex, this.endIndex);\n    node.children = this.children.map(child => {\n      return child.clone();\n    });\n\n    return node;\n  }\n}\n"],"file":"CompositeNode.js"}