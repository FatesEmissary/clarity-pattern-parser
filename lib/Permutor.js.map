{"version":3,"sources":["../src/Permutor.js"],"names":["Permutor","array","positionToOptions","createPositionMap","getPermutations","reduce","acc","value","index","concat","getOptions","x","y","length","yValue","nextX","options","map","option","permutations","setOptions","getKey"],"mappings":";;;;;;;;;;;;;IAAqBA,Q;;;AACnB,sBAAc;AAAA;;AACZ,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AACD;;;;4BAEOD,K,EAAO;AACb,WAAKA,KAAL,GAAaA,KAAb;AACA,WAAKE,iBAAL;AACA,aAAO,KAAKC,eAAL,EAAP;AACD;;;sCAEiB;AAAA;;AAChB,aAAO,KAAKH,KAAL,CAAW,CAAX,EAAcI,MAAd,CAAqB,UAACC,GAAD,EAAMC,KAAN,EAAaC,KAAb,EAAuB;AACjD,eAAOF,GAAG,CAACG,MAAJ,CAAW,KAAI,CAACC,UAAL,CAAgB,CAAhB,EAAmBF,KAAnB,CAAX,CAAP;AACD,OAFM,EAEJ,EAFI,CAAP;AAGD;;;2BAEMG,C,EAAGC,C,EAAG;AACX,uBAAUD,CAAV,cAAeC,CAAf;AACD;;;wCAEmB;AAAA;;AAClB,WAAKV,iBAAL,GAAyB,EAAzB;;AAEA,WAAK,IAAIS,CAAC,GAAG,KAAKV,KAAL,CAAWY,MAAX,GAAoB,CAAjC,EAAoCF,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD;AAAA,mCACtCC,CADsC;AAE7C,cAAME,MAAM,GAAG,MAAI,CAACb,KAAL,CAAWU,CAAX,EAAcC,CAAd,CAAf;AACA,cAAMG,KAAK,GAAGJ,CAAC,GAAG,CAAlB;;AAEA,cAAI,MAAI,CAACV,KAAL,CAAWc,KAAX,KAAqB,IAAzB,EAA+B;AAC7B,gBAAMC,OAAO,GAAG,MAAI,CAACf,KAAL,CAAWc,KAAX,CAAhB;AAEA,gBAAMR,KAAK,GAAGS,OAAO,CAClBC,GADW,CACP,UAACC,MAAD,EAASV,KAAT,EAAmB;AACtB,kBAAIW,YAAY,GAAG,MAAI,CAACT,UAAL,CAAgBK,KAAhB,EAAuBP,KAAvB,CAAnB;;AAEA,qBAAOW,YAAY,CAACF,GAAb,CAAiB,UAAAC,MAAM,EAAI;AAChC,iCAAUJ,MAAV,SAAmBI,MAAnB;AACD,eAFM,CAAP;AAGD,aAPW,EAQXb,MARW,CAQJ,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACtB,qBAAOD,GAAG,CAACG,MAAJ,CAAWF,KAAX,CAAP;AACD,aAVW,EAUT,EAVS,CAAd;;AAYA,YAAA,MAAI,CAACa,UAAL,CAAgBT,CAAhB,EAAmBC,CAAnB,EAAsBL,KAAtB;AACD,WAhBD,MAgBO;AACL,YAAA,MAAI,CAACa,UAAL,CAAgBT,CAAhB,EAAmBC,CAAnB,EAAsB,CAACE,MAAD,CAAtB;AACD;AAvB4C;;AAC/C,aAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKX,KAAL,CAAWU,CAAX,EAAcE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAAA,gBAAtCA,CAAsC;AAuB9C;AACF;AACF;;;+BAEUD,C,EAAGC,C,EAAG;AACf,aAAO,KAAKV,iBAAL,CAAuB,KAAKmB,MAAL,CAAYV,CAAZ,EAAeC,CAAf,CAAvB,CAAP;AACD;;;+BAEUD,C,EAAGC,C,EAAGL,K,EAAO;AACtB,WAAKL,iBAAL,CAAuB,KAAKmB,MAAL,CAAYV,CAAZ,EAAeC,CAAf,CAAvB,IAA4CL,KAA5C;AACD","sourcesContent":["export default class Permutor {\n  constructor() {\n    this.array = [];\n    this.positionToOptions = null;\n  }\n\n  permute(array) {\n    this.array = array;\n    this.createPositionMap();\n    return this.getPermutations();\n  }\n\n  getPermutations() {\n    return this.array[0].reduce((acc, value, index) => {\n      return acc.concat(this.getOptions(0, index));\n    }, []);\n  }\n\n  getKey(x, y) {\n    return `${x}|${y}`;\n  }\n\n  createPositionMap() {\n    this.positionToOptions = {};\n\n    for (let x = this.array.length - 1; x >= 0; x--) {\n      for (let y = 0; y < this.array[x].length; y++) {\n        const yValue = this.array[x][y];\n        const nextX = x + 1;\n\n        if (this.array[nextX] != null) {\n          const options = this.array[nextX];\n\n          const value = options\n            .map((option, index) => {\n              let permutations = this.getOptions(nextX, index);\n\n              return permutations.map(option => {\n                return `${yValue}${option}`;\n              });\n            })\n            .reduce((acc, value) => {\n              return acc.concat(value);\n            }, []);\n\n          this.setOptions(x, y, value);\n        } else {\n          this.setOptions(x, y, [yValue]);\n        }\n      }\n    }\n  }\n\n  getOptions(x, y) {\n    return this.positionToOptions[this.getKey(x, y)];\n  }\n\n  setOptions(x, y, value) {\n    this.positionToOptions[this.getKey(x, y)] = value;\n  }\n}\n"],"file":"Permutor.js"}